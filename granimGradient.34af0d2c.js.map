{"version":3,"sources":["../node_modules/morphing-pointer/dist/index.js","../node_modules/granim/lib/animateColors.js","../node_modules/granim/lib/changeBlendingMode.js","../node_modules/granim/lib/changeDirection.js","../node_modules/granim/lib/changeState.js","../node_modules/granim/lib/clear.js","../node_modules/granim/lib/convertColorToRgba.js","../node_modules/granim/lib/destroy.js","../node_modules/granim/lib/eventPolyfill.js","../node_modules/granim/lib/getColor.js","../node_modules/granim/lib/getColorDiff.js","../node_modules/granim/lib/getColorPos.js","../node_modules/granim/lib/getColorPosDiff.js","../node_modules/granim/lib/getCurrentColors.js","../node_modules/granim/lib/getCurrentColorsPos.js","../node_modules/granim/lib/getDimensions.js","../node_modules/granim/lib/getElement.js","../node_modules/granim/lib/getLightness.js","../node_modules/granim/lib/makeGradient.js","../node_modules/granim/lib/onResize.js","../node_modules/granim/lib/onScroll.js","../node_modules/granim/lib/pause.js","../node_modules/granim/lib/pauseWhenNotInView.js","../node_modules/granim/lib/play.js","../node_modules/granim/lib/prepareImage.js","../node_modules/granim/lib/refreshColorsAndPos.js","../node_modules/granim/lib/setColors.js","../node_modules/granim/lib/setDirection.js","../node_modules/granim/lib/setSizeAttributes.js","../node_modules/granim/lib/triggerError.js","../node_modules/granim/lib/validateInput.js","../node_modules/granim/lib/Granim.js","../node_modules/granim/index.js","js/granimGradient.js"],"names":["granimInstance","Granim","element","direction","isPausedWhenNotInView","stateTransitionSpeed","states","gradients"],"mappings":"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AA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,IAAA,GAAA,YAAA,EAAA,EAAA,IAAA,QAAA,OAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,IAAA,EAAA,IAAA,EAAA,MAAA,IAAA,EAAA,KAAA,GAAA,EAAA,OAAA,IAAA,EAAA,GAAA,GAAA,GAAA,GAAA,SAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,MAAA,IAAA,QAAA,SAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,GAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,IAAA,EAAA,EAAA,QAAA,QAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EA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","file":"granimGradient.34af0d2c.js","sourceRoot":"../src","sourcesContent":["(function () {var db={};function ed(){new Be().init()}function ma(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function Tb(t,r){t.prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r}var Ub,K,na,Vb,fd,gd,hd,Ua,Wb,U={autoSleep:120,force3D:\"auto\",nullTargetWarn:1,units:{lineHeight:\"\"}},Ha={duration:.5,overwrite:!1,delay:0},ja=1e8,G=1/ja,sb=2*Math.PI,id=sb/4,jd=0,Xb=Math.sqrt,kd=Math.cos,ld=Math.sin,Q=function(t){return\"string\"==typeof t},L=function(t){return\"function\"==typeof t},ia=function(t){return\"number\"==typeof t},tb=function(t){return void 0===t},oa=function(t){return\"object\"==typeof t},V=function(t){return!1!==t},Yb=function(){return\"undefined\"!=typeof window},Zb=function(t){return L(t)||Q(t)},$b=\"function\"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},ea=Array.isArray,ub=/(?:-?\\.?\\d|\\.)+/gi,_b=/[-+=.]*\\d+[.e\\-+]*\\d*[e\\-+]*\\d*/g,Ia=/[-+=.]*\\d+[.e-]*\\d*[a-z%]*/g,vb=/[-+=.]*\\d+\\.?\\d*(?:e-|e\\+)?\\d*/gi,ac=/[+-]=-?[.\\d]+/,bc=/[#\\-+.]*\\b[a-z\\d-=+%.]+/gi,md=/[\\d.+\\-=]+(?:e[-+]\\d*)*/i,Y={},wb={},cc=function(t){return(wb=Ja(t,Y))&&la},xb=function(t,r){return console.warn(\"Invalid property\",t,\"set to\",r,\"Missing plugin? gsap.registerPlugin()\")},dc=function(t,r){return!r&&console.warn(t)},ec=function(t,r){return t&&(Y[t]=r)&&wb&&(wb[t]=r)||Y},Va=function(){return 0},yb={},ta=[],fc={},aa={},zb={},nd=30,eb=[],gc=\"\",Ab=function(t){var r,e,$=t[0];if(oa($)||L($)||(t=[t]),!(r=($._gsap||{}).harness)){for(e=eb.length;e--&&!eb[e].targetTest($););r=eb[e]}for(e=t.length;e--;)t[e]&&(t[e]._gsap||(t[e]._gsap=new Gc(t[e],r)))||t.splice(e,1);return t},Aa=function(t){return t._gsap||Ab(ka(t))[0]._gsap},hc=function(t,r,e){return(e=t[r])&&L(e)?t[r]():tb(e)&&t.getAttribute&&t.getAttribute(r)||e},ba=function(t,r){return(t=t.split(\",\")).forEach(r)||t},j=function(t){return Math.round(1e5*t)/1e5||0},od=function(t,r){for(var e=r.length,$=0;t.indexOf(r[$])<0&&++$<e;);return $<e},Wa=function(t,r,e){var $,a=ia(t[1]),i=(a?2:1)+(r<2?0:1),n=t[i];if(a&&(n.duration=t[1]),n.parent=e,r){for($=n;e&&!(\"immediateRender\"in $);)$=e.vars.defaults||{},e=V(e.vars.inherit)&&e.parent;n.immediateRender=V($.immediateRender),r<2?n.runBackwards=1:n.startAt=t[i-1]}return n},fb=function(){var t,r,e=ta.length,$=ta.slice(0);for(fc={},ta.length=0,t=0;t<e;t++)(r=$[t])&&r._lazy&&(r.render(r._lazy[0],r._lazy[1],!0)._lazy=0)},ic=function(t,r,e,$){ta.length&&fb(),t.render(r,e,$),ta.length&&fb()},jc=function(t){var r=parseFloat(t);return(r||0===r)&&(t+\"\").match(bc).length<2?r:Q(t)?t.trim():t},kc=function(t){return t},fa=function(t,r){for(var e in r)e in t||(t[e]=r[e]);return t},pd=function(t,r){for(var e in r)e in t||\"duration\"===e||\"ease\"===e||(t[e]=r[e])},Ja=function(t,r){for(var e in r)t[e]=r[e];return t},lc=function t(r,e){for(var $ in e)\"__proto__\"!==$&&\"constructor\"!==$&&\"prototype\"!==$&&(r[$]=oa(e[$])?t(r[$]||(r[$]={}),e[$]):e[$]);return r},Bb=function(t,r){var e,$={};for(e in t)e in r||($[e]=t[e]);return $},gb=function(t){var r=t.parent||K,e=t.keyframes?pd:fa;if(V(t.inherit))for(;r;)e(t,r.vars.defaults),r=r.parent||r._dp;return t},qd=function(t,r){for(var e=t.length,$=e===r.length;$&&e--&&t[e]===r[e];);return e<0},rd=function(t,r,e,$,a){void 0===e&&(e=\"_first\"),void 0===$&&($=\"_last\");var i,n=t[$];if(a)for(i=r[a];n&&n[a]>i;)n=n._prev;return n?(r._next=n._next,n._next=r):(r._next=t[e],t[e]=r),r._next?r._next._prev=r:t[$]=r,r._prev=n,r.parent=r._dp=t,r},hb=function(t,r,e,$){void 0===e&&(e=\"_first\"),void 0===$&&($=\"_last\");var a=r._prev,i=r._next;a?a._next=i:t[e]===r&&(t[e]=i),i?i._prev=a:t[$]===r&&(t[$]=a),r._next=r._prev=r.parent=null},ua=function(t,r){t.parent&&(!r||t.parent.autoRemoveChildren)&&t.parent.remove(t),t._act=0},Ba=function(t,r){if(t&&(!r||r._end>t._dur||r._start<0))for(var e=t;e;)e._dirty=1,e=e.parent;return t},sd=function(t){for(var r=t.parent;r&&r.parent;)r._dirty=1,r.totalDuration(),r=r.parent;return t},td=function t(r){return!r||r._ts&&t(r.parent)},mc=function(t){return t._repeat?Ka(t._tTime,t=t.duration()+t._rDelay)*t:0},Ka=function(t,r){var e=Math.floor(t/=r);return t&&e===t?e-1:e},ib=function(t,r){return(t-r._start)*r._ts+(r._ts>=0?0:r._dirty?r.totalDuration():r._tDur)},Cb=function(t){return t._end=j(t._start+(t._tDur/Math.abs(t._ts||t._rts||G)||0))},nc=function(t,r){var e=t._dp;return e&&e.smoothChildTiming&&t._ts&&(t._start=j(e._time-(t._ts>0?r/t._ts:((t._dirty?t.totalDuration():t._tDur)-r)/-t._ts)),Cb(t),e._dirty||Ba(e,t)),t},jb=function(t,r){var e;if((r._time||r._initted&&!r._dur)&&(e=ib(t.rawTime(),r),(!r._dur||Xa(0,r.totalDuration(),e)-r._tTime>G)&&r.render(e,!0)),Ba(t,r)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(e=t;e._dp;)e.rawTime()>=0&&e.totalTime(e._tTime),e=e._dp;t._zTime=-G}},pa=function(t,r,e,$){return r.parent&&ua(r),r._start=j(e+r._delay),r._end=j(r._start+(r.totalDuration()/Math.abs(r.timeScale())||0)),rd(t,r,\"_first\",\"_last\",t._sort?\"_start\":0),t._recent=r,$||jb(t,r),t},oc=function(t,r){return(Y.ScrollTrigger||xb(\"scrollTrigger\",r))&&Y.ScrollTrigger.create(r,t)},pc=function(t,r,e,$){return Pd(t,r),t._initted?!e&&t._pt&&(t._dur&&!1!==t.vars.lazy||!t._dur&&t.vars.lazy)&&hd!==ga.frame?(ta.push(t),t._lazy=[r,$],1):void 0:1},ud=function t(r){var e=r.parent;return e&&e._ts&&e._initted&&!e._lock&&(e.rawTime()<0||t(e))},vd=function(t,r,e,$){var a,i,n,o=t.ratio,s=r<0||!r&&(!t._start&&ud(t)||(t._ts<0||t._dp._ts<0)&&\"isFromStart\"!==t.data&&\"isStart\"!==t.data)?0:1,_=t._rDelay,T=0;if(_&&t._repeat&&(T=Xa(0,t._tDur,r),i=Ka(T,_),n=Ka(t._tTime,_),t._yoyo&&1&i&&(s=1-s),i!==n&&(o=1-s,t.vars.repeatRefresh&&t._initted&&t.invalidate())),s!==o||$||t._zTime===G||!r&&t._zTime){if(!t._initted&&pc(t,r,$,e))return;for(n=t._zTime,t._zTime=r||(e?G:0),e||(e=r&&!n),t.ratio=s,t._from&&(s=1-s),t._time=0,t._tTime=T,e||da(t,\"onStart\"),a=t._pt;a;)a.r(s,a.d),a=a._next;t._startAt&&r<0&&t._startAt.render(r,!0,!0),t._onUpdate&&!e&&da(t,\"onUpdate\"),T&&t._repeat&&!e&&t.parent&&da(t,\"onRepeat\"),(r>=t._tDur||r<0)&&t.ratio===s&&(s&&ua(t,1),e||(da(t,s?\"onComplete\":\"onReverseComplete\",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=r)},wd=function(t,r,e){var $;if(e>r)for($=t._first;$&&$._start<=e;){if(!$._dur&&\"isPause\"===$.data&&$._start>r)return $;$=$._next}else for($=t._last;$&&$._start>=e;){if(!$._dur&&\"isPause\"===$.data&&$._start<r)return $;$=$._prev}},La=function(t,r,e,$){var a=t._repeat,i=j(r)||0,n=t._tTime/t._tDur;return n&&!$&&(t._time*=i/t._dur),t._dur=i,t._tDur=a?a<0?1e10:j(i*(a+1)+t._rDelay*a):i,n&&!$?nc(t,t._tTime=t._tDur*n):t.parent&&Cb(t),e||Ba(t.parent,t),t},qc=function(t){return t instanceof W?Ba(t):La(t,t._dur)},xd={_start:0,endTime:Va},R=function t(r,e){var $,a,i=r.labels,n=r._recent||xd,o=r.duration()>=ja?n.endTime(!1):r._dur;return Q(e)&&(isNaN(e)||e in i)?\"<\"===($=e.charAt(0))||\">\"===$?(\"<\"===$?n._start:n.endTime(n._repeat>=0))+(parseFloat(e.substr(1))||0):($=e.indexOf(\"=\"))<0?(e in i||(i[e]=o),i[e]):(a=+(e.charAt($-1)+e.substr($+1)),$>1?t(r,e.substr(0,$-1))+a:o+a):null==e?o:+e},va=function(t,r){return t||0===t?r(t):r},Xa=function(t,r,e){return e<t?t:e>r?r:e},ca=function(t){if(\"string\"!=typeof t)return\"\";var r=md.exec(t);return r?t.substr(r.index+r[0].length):\"\"},yd=function(t,r,e){return va(e,function(e){return Xa(t,r,e)})},Db=[].slice,rc=function(t,r){return t&&oa(t)&&\"length\"in t&&(!r&&!t.length||t.length-1 in t&&oa(t[0]))&&!t.nodeType&&t!==na},zd=function(t,r,e){return void 0===e&&(e=[]),t.forEach(function(t){var $;return Q(t)&&!r||rc(t,1)?($=e).push.apply($,ka(t)):e.push(t)})||e},ka=function(t,r){return!Q(t)||r||!Vb&&Na()?ea(t)?zd(t,r):rc(t)?Db.call(t,0):t?[t]:[]:Db.call(fd.querySelectorAll(t),0)},sc=function(t){return t.sort(function(){return .5-Math.random()})},tc=function(t){if(L(t))return t;var r=oa(t)?t:{each:t},e=Oa(r.ease),$=r.from||0,a=parseFloat(r.base)||0,i={},n=$>0&&$<1,o=isNaN($)||n,s=r.axis,_=$,T=$;return Q($)?_=T={center:.5,edges:.5,end:1}[$]||0:!n&&o&&(_=$[0],T=$[1]),function(t,n,p){var S,u,N,l,v,h,c,d,f,m=(p||r).length,g=i[m];if(!g){if(!(f=\"auto\"===r.grid?0:(r.grid||[1,ja])[1])){for(c=-ja;c<(c=p[f++].getBoundingClientRect().left)&&f<m;);f--}for(g=i[m]=[],S=o?Math.min(f,m)*_-.5:$%f,u=o?m*T/f-.5:$/f|0,c=0,d=ja,h=0;h<m;h++)N=h%f-S,l=u-(h/f|0),g[h]=v=s?Math.abs(\"y\"===s?l:N):Xb(N*N+l*l),v>c&&(c=v),v<d&&(d=v);\"random\"===$&&sc(g),g.max=c-d,g.min=d,g.v=m=(parseFloat(r.amount)||parseFloat(r.each)*(f>m?m-1:s?\"y\"===s?m/f:f:Math.max(f,m/f))||0)*(\"edges\"===$?-1:1),g.b=m<0?a-m:a,g.u=ca(r.amount||r.each)||0,e=e&&m<0?Dc(e):e}return m=(g[t]-g.min)/g.max||0,j(g.b+(e?e(m):m)*g.v)+g.u}},Eb=function(t){var r=t<1?Math.pow(10,(t+\"\").length-2):1;return function(e){var $=Math.round(parseFloat(e)/t)*t*r;return($-$%1)/r+(ia(e)?0:ca(e))}},uc=function(t,r){var e,$,a=ea(t);return!a&&oa(t)&&(e=a=t.radius||ja,t.values?(t=ka(t.values),($=!ia(t[0]))&&(e*=e)):t=Eb(t.increment)),va(r,a?L(t)?function(r){return $=t(r),Math.abs($-r)<=e?$:r}:function(r){for(var a,i,n=parseFloat($?r.x:r),o=parseFloat($?r.y:0),s=ja,_=0,T=t.length;T--;)(a=$?(a=t[T].x-n)*a+(i=t[T].y-o)*i:Math.abs(t[T]-n))<s&&(s=a,_=T);return _=!e||s<=e?t[_]:r,$||_===r||ia(r)?_:_+ca(r)}:Eb(t))},vc=function(t,r,e,$){return va(ea(t)?!r:!0===e?!!(e=0):!$,function(){return ea(t)?t[~~(Math.random()*t.length)]:(e=e||1e-5)&&($=e<1?Math.pow(10,(e+\"\").length-2):1)&&Math.floor(Math.round((t-e/2+Math.random()*(r-t+.99*e))/e)*e*$)/$})},Ad=function(){for(var t=arguments.length,r=new Array(t),e=0;e<t;e++)r[e]=arguments[e];return function(t){return r.reduce(function(t,r){return r(t)},t)}},Bd=function(t,r){return function(e){return t(parseFloat(e))+(r||ca(e))}},Cd=function(t,r,e){return xc(t,r,0,1,e)},wc=function(t,r,e){return va(e,function(e){return t[~~r(e)]})},Dd=function t(r,e,$){var a=e-r;return ea(r)?wc(r,t(0,r.length),e):va($,function(t){return(a+(t-r)%a)%a+r})},Ed=function t(r,e,$){var a=e-r,i=2*a;return ea(r)?wc(r,t(0,r.length-1),e):va($,function(t){return r+((t=(i+(t-r)%i)%i||0)>a?i-t:t)})},kb=function(t){for(var r,e,$,a,i=0,n=\"\";~(r=t.indexOf(\"random(\",i));)$=t.indexOf(\")\",r),a=\"[\"===t.charAt(r+7),e=t.substr(r+7,$-r-7).match(a?bc:ub),n+=t.substr(i,r-i)+vc(a?e:+e[0],a?0:+e[1],+e[2]||1e-5),i=$+1;return n+t.substr(i,t.length-i)},xc=function(t,r,e,$,a){var i=r-t,n=$-e;return va(a,function(r){return e+((r-t)/i*n||0)})},Fd=function t(r,e,$,a){var i=isNaN(r+e)?0:function(t){return(1-t)*r+t*e};if(!i){var n,o,s,_,T,p=Q(r),S={};if(!0===$&&(a=1)&&($=null),p)r={p:r},e={p:e};else if(ea(r)&&!ea(e)){for(s=[],_=r.length,T=_-2,o=1;o<_;o++)s.push(t(r[o-1],r[o]));_--,i=function(t){t*=_;var r=Math.min(T,~~t);return s[r](t-r)},$=e}else a||(r=Ja(ea(r)?[]:{},r));if(!s){for(n in e)Ib.call(S,r,n,\"get\",e[n]);i=function(t){return Lb(t,S)||(p?r.p:r)}}}return va($,i)},yc=function(t,r,e){var $,a,i,n=t.labels,o=ja;for($ in n)(a=n[$]-r)<0==!!e&&a&&o>(a=Math.abs(a))&&(i=$,o=a);return i},da=function(t,r,e){var $,a,i=t.vars,n=i[r];if(n)return $=i[r+\"Params\"],a=i.callbackScope||t,e&&ta.length&&fb(),$?n.apply(a,$):n.call(a)},Ya=function(t){return ua(t),t.progress()<1&&da(t,\"onInterrupt\"),t},Gd=function(t){var r=(t=!t.name&&t.default||t).name,e=L(t),$=r&&!e&&t.init?function(){this._props=[]}:t,a={init:Va,render:Lb,add:Ib,kill:Wd,modifier:Vd,rawVars:0},i={targetTest:0,get:0,getSetter:Kb,aliases:{},register:0};if(Na(),t!==$){if(aa[r])return;fa($,fa(Bb(t,a),i)),Ja($.prototype,Ja(a,Bb(t,i))),aa[$.prop=r]=$,t.targetTest&&(eb.push($),yb[r]=1),r=(\"css\"===r?\"CSS\":r.charAt(0).toUpperCase()+r.substr(1))+\"Plugin\"}ec(r,$),t.register&&t.register(la,$,X)},H=255,Za={aqua:[0,H,H],lime:[0,H,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,H],navy:[0,0,128],white:[H,H,H],olive:[128,128,0],yellow:[H,H,0],orange:[H,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[H,0,0],pink:[H,192,203],cyan:[0,H,H],transparent:[H,H,H,0]},Fb=function(t,r,e){return(6*(t=t<0?t+1:t>1?t-1:t)<1?r+(e-r)*t*6:t<.5?e:3*t<2?r+(e-r)*(2/3-t)*6:r)*H+.5|0},zc=function(t,r,e){var $,a,i,n,o,s,_,T,p,S,u=t?ia(t)?[t>>16,t>>8&H,t&H]:0:Za.black;if(!u){if(\",\"===t.substr(-1)&&(t=t.substr(0,t.length-1)),Za[t])u=Za[t];else if(\"#\"===t.charAt(0)){if(t.length<6&&($=t.charAt(1),a=t.charAt(2),i=t.charAt(3),t=\"#\"+$+$+a+a+i+i+(5===t.length?t.charAt(4)+t.charAt(4):\"\")),9===t.length)return[(u=parseInt(t.substr(1,6),16))>>16,u>>8&H,u&H,parseInt(t.substr(7),16)/255];u=[(t=parseInt(t.substr(1),16))>>16,t>>8&H,t&H]}else if(\"hsl\"===t.substr(0,3)){if(u=S=t.match(ub),r){if(~t.indexOf(\"=\"))return u=t.match(_b),e&&u.length<4&&(u[3]=1),u}else n=+u[0]%360/360,o=+u[1]/100,$=2*(s=+u[2]/100)-(a=s<=.5?s*(o+1):s+o-s*o),u.length>3&&(u[3]*=1),u[0]=Fb(n+1/3,$,a),u[1]=Fb(n,$,a),u[2]=Fb(n-1/3,$,a);}else u=t.match(ub)||Za.transparent;u=u.map(Number)}return r&&!S&&($=u[0]/H,a=u[1]/H,i=u[2]/H,s=((_=Math.max($,a,i))+(T=Math.min($,a,i)))/2,_===T?n=o=0:(p=_-T,o=s>.5?p/(2-_-T):p/(_+T),n=_===$?(a-i)/p+(a<i?6:0):_===a?(i-$)/p+2:($-a)/p+4,n*=60),u[0]=~~(n+.5),u[1]=~~(100*o+.5),u[2]=~~(100*s+.5)),e&&u.length<4&&(u[3]=1),u},Ac=function(t){var r=[],e=[],$=-1;return t.split(Ma).forEach(function(t){var a=t.match(Ia)||[];r.push.apply(r,a),e.push($+=a.length+1)}),r.c=e,r},Bc=function(t,r,e){var $,a,i,n,o=\"\",s=(t+o).match(Ma),_=r?\"hsla(\":\"rgba(\",T=0;if(!s)return t;if(s=s.map(function(t){return(t=zc(t,r,1))&&_+(r?t[0]+\",\"+t[1]+\"%,\"+t[2]+\"%,\"+t[3]:t.join(\",\"))+\")\"}),e&&(i=Ac(t),($=e.c).join(o)!==i.c.join(o)))for(n=(a=t.replace(Ma,\"1\").split(Ia)).length-1;T<n;T++)o+=a[T]+(~$.indexOf(T)?s.shift()||_+\"0,0,0,0)\":(i.length?i:s.length?s:e).shift());if(!a)for(n=(a=t.split(Ma)).length-1;T<n;T++)o+=a[T]+s[T];return o+a[n]},Ma=function(){var t,r=\"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3,4}){1,2}\\\\b\";for(t in Za)r+=\"|\"+t+\"\\\\b\";return new RegExp(r+\")\",\"gi\")}(),Hd=/hsl[a]?\\(/,Cc=function(t){var r,e=t.join(\" \");if(Ma.lastIndex=0,Ma.test(e))return r=Hd.test(e),t[1]=Bc(t[1],r),t[0]=Bc(t[0],r,Ac(t[1])),!0},ga=function(){var t,r,e,$,a,i,n=Date.now,o=500,s=33,_=n(),T=_,p=1e3/240,S=p,u=[],N=function e(N){var l,v,h,c,d=n()-T,f=!0===N;if(d>o&&(_+=d-s),((l=(h=(T+=d)-_)-S)>0||f)&&(c=++$.frame,a=h-1e3*$.time,$.time=h/=1e3,S+=l+(l>=p?4:p-l),v=1),f||(t=r(e)),v)for(i=0;i<u.length;i++)u[i](h,a,c,N)};return $={time:0,frame:0,tick:function(){N(!0)},deltaRatio:function(t){return a/(1e3/(t||60))},wake:function(){gd&&(!Vb&&Yb()&&(na=Vb=window,fd=na.document||{},Y.gsap=la,(na.gsapVersions||(na.gsapVersions=[])).push(la.version),cc(wb||na.GreenSockGlobals||!na.gsap&&na||{}),e=na.requestAnimationFrame),t&&$.sleep(),r=e||function(t){return setTimeout(t,S-1e3*$.time+1|0)},Wb=1,N(2))},sleep:function(){(e?na.cancelAnimationFrame:clearTimeout)(t),Wb=0,r=Va},lagSmoothing:function(t,r){o=t||1/G,s=Math.min(r,o,0)},fps:function(t){p=1e3/(t||240),S=1e3*$.time+p},add:function(t){u.indexOf(t)<0&&u.push(t),Na()},remove:function(t){var r;~(r=u.indexOf(t))&&u.splice(r,1)&&i>=r&&i--},_listeners:u}}(),Na=function(){return!Wb&&ga.wake()},q={},Id=/^[\\d.\\-M][\\d.\\-,\\s]/,Jd=/[\"']/g,Kd=function(t){for(var r,e,$,a={},i=t.substr(1,t.length-3).split(\":\"),n=i[0],o=1,s=i.length;o<s;o++)e=i[o],r=o!==s-1?e.lastIndexOf(\",\"):e.length,$=e.substr(0,r),a[n]=isNaN($)?$.replace(Jd,\"\").trim():+$,n=e.substr(r+1).trim();return a},Ld=function(t){var r=t.indexOf(\"(\")+1,e=t.indexOf(\")\"),$=t.indexOf(\"(\",r);return t.substring(r,~$&&$<e?t.indexOf(\")\",e+1):e)},Md=function(t){var r=(t+\"\").split(\"(\"),e=q[r[0]];return e&&r.length>1&&e.config?e.config.apply(null,~t.indexOf(\"{\")?[Kd(r[1])]:Ld(t).split(\",\").map(jc)):q._CE&&Id.test(t)?q._CE(\"\",t):e},Dc=function(t){return function(r){return 1-t(1-r)}},Ec=function t(r,e){for(var $,a=r._first;a;)a instanceof W?t(a,e):!a.vars.yoyoEase||a._yoyo&&a._repeat||a._yoyo===e||(a.timeline?t(a.timeline,e):($=a._ease,a._ease=a._yEase,a._yEase=$,a._yoyo=e)),a=a._next},Oa=function(t,r){return t&&(L(t)?t:q[t]||Md(t))||r},Ca=function(t,r,e,$){void 0===e&&(e=function(t){return 1-r(1-t)}),void 0===$&&($=function(t){return t<.5?r(2*t)/2:1-r(2*(1-t))/2});var a,i={easeIn:r,easeOut:e,easeInOut:$};return ba(t,function(t){for(var r in q[t]=Y[t]=i,q[a=t.toLowerCase()]=e,i)q[a+(\"easeIn\"===r?\".in\":\"easeOut\"===r?\".out\":\".inOut\")]=q[t+\".\"+r]=i[r]}),i},Fc=function(t){return function(r){return r<.5?(1-t(1-2*r))/2:.5+t(2*(r-.5))/2}},Gb=function t(r,e,$){var a=e>=1?e:1,i=($||(r?.3:.45))/(e<1?e:1),n=i/sb*(Math.asin(1/a)||0),o=function(t){return 1===t?1:a*Math.pow(2,-10*t)*ld((t-n)*i)+1},s=\"out\"===r?o:\"in\"===r?function(t){return 1-o(1-t)}:Fc(o);return i=sb/i,s.config=function(e,$){return t(r,e,$)},s},Hb=function t(r,e){void 0===e&&(e=1.70158);var $=function(t){return t?--t*t*((e+1)*t+e)+1:0},a=\"out\"===r?$:\"in\"===r?function(t){return 1-$(1-t)}:Fc($);return a.config=function(e){return t(r,e)},a};ba(\"Linear,Quad,Cubic,Quart,Quint,Strong\",function(t,r){var e=r<5?r+1:r;Ca(t+\",Power\"+(e-1),r?function(t){return Math.pow(t,e)}:function(t){return t},function(t){return 1-Math.pow(1-t,e)},function(t){return t<.5?Math.pow(2*t,e)/2:1-Math.pow(2*(1-t),e)/2})}),q.Linear.easeNone=q.none=q.Linear.easeIn,Ca(\"Elastic\",Gb(\"in\"),Gb(\"out\"),Gb()),function(t,r){var e=1/r,$=function($){return $<e?t*$*$:$<.7272727272727273?t*Math.pow($-1.5/r,2)+.75:$<.9090909090909092?t*($-=2.25/r)*$+.9375:t*Math.pow($-2.625/r,2)+.984375};Ca(\"Bounce\",function(t){return 1-$(1-t)},$)}(7.5625,2.75),Ca(\"Expo\",function(t){return t?Math.pow(2,10*(t-1)):0}),Ca(\"Circ\",function(t){return-(Xb(1-t*t)-1)}),Ca(\"Sine\",function(t){return 1===t?1:1-kd(t*id)}),Ca(\"Back\",Hb(\"in\"),Hb(\"out\"),Hb()),q.SteppedEase=q.steps=Y.SteppedEase={config:function(t,r){void 0===t&&(t=1);var e=1/t,$=t+(r?0:1),a=r?1:0,i=1-G;return function(t){return(($*Xa(0,i,t)|0)+a)*e}}},Ha.ease=q[\"quad.out\"],ba(\"onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt\",function(t){return gc+=t+\",\"+t+\"Params,\"});var Gc=function(t,r){this.id=jd++,t._gsap=this,this.target=t,this.harness=r,this.get=r?r.get:hc,this.set=r?r.getSetter:Kb};var $a=function(){function t(t,r){var e=t.parent||K;this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,La(this,+t.duration,1,1),this.data=t.data,Wb||ga.wake(),e&&pa(e,this,r||0===r?r:e._time,1),t.reversed&&this.reverse(),t.paused&&this.paused(!0)}var r=t.prototype;return r.delay=function(t){return t||0===t?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+t-this._delay),this._delay=t,this):this._delay},r.duration=function(t){return arguments.length?this.totalDuration(this._repeat>0?t+(t+this._rDelay)*this._repeat:t):this.totalDuration()&&this._dur},r.totalDuration=function(t){return arguments.length?(this._dirty=0,La(this,this._repeat<0?t:(t-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},r.totalTime=function(t,r){if(Na(),!arguments.length)return this._tTime;var e=this._dp;if(e&&e.smoothChildTiming&&this._ts){for(nc(this,t),!e._dp||e.parent||jb(e,this);e.parent;)e.parent._time!==e._start+(e._ts>=0?e._tTime/e._ts:(e.totalDuration()-e._tTime)/-e._ts)&&e.totalTime(e._tTime,!0),e=e.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&t<this._tDur||this._ts<0&&t>0||!this._tDur&&!t)&&pa(this._dp,this,this._start-this._delay)}return(this._tTime!==t||!this._dur&&!r||this._initted&&Math.abs(this._zTime)===G||!t&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=t),ic(this,t,r)),this},r.time=function(t,r){return arguments.length?this.totalTime(Math.min(this.totalDuration(),t+mc(this))%this._dur||(t?this._dur:0),r):this._time},r.totalProgress=function(t,r){return arguments.length?this.totalTime(this.totalDuration()*t,r):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},r.progress=function(t,r){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?t:1-t)+mc(this),r):this.duration()?Math.min(1,this._time/this._dur):this.ratio},r.iteration=function(t,r){var e=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(t-1)*e,r):this._repeat?Ka(this._tTime,e)+1:1},r.timeScale=function(t){if(!arguments.length)return this._rts===-G?0:this._rts;if(this._rts===t)return this;var r=this.parent&&this._ts?ib(this.parent._time,this):this._tTime;return this._rts=+t||0,this._ts=this._ps||t===-G?0:this._rts,sd(this.totalTime(Xa(-this._delay,this._tDur,r),!0))},r.paused=function(t){return arguments.length?(this._ps!==t&&(this._ps=t,t?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Na(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&(this._tTime-=G)&&Math.abs(this._zTime)!==G))),this):this._ps},r.startTime=function(t){if(arguments.length){this._start=t;var r=this.parent||this._dp;return r&&(r._sort||!this.parent)&&pa(r,this,t-this._delay),this}return this._start},r.endTime=function(t){return this._start+(V(t)?this.totalDuration():this.duration())/Math.abs(this._ts)},r.rawTime=function(t){var r=this.parent||this._dp;return r?t&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?ib(r.rawTime(t),this):this._tTime:this._tTime},r.globalTime=function(t){for(var r=this,e=arguments.length?t:r.rawTime();r;)e=r._start+e/(r._ts||1),r=r._dp;return e},r.repeat=function(t){return arguments.length?(this._repeat=t===1/0?-2:t,qc(this)):-2===this._repeat?1/0:this._repeat},r.repeatDelay=function(t){return arguments.length?(this._rDelay=t,qc(this)):this._rDelay},r.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},r.seek=function(t,r){return this.totalTime(R(this,t),V(r))},r.restart=function(t,r){return this.play().totalTime(t?-this._delay:0,V(r))},r.play=function(t,r){return null!=t&&this.seek(t,r),this.reversed(!1).paused(!1)},r.reverse=function(t,r){return null!=t&&this.seek(t||this.totalDuration(),r),this.reversed(!0).paused(!1)},r.pause=function(t,r){return null!=t&&this.seek(t,r),this.paused(!0)},r.resume=function(){return this.paused(!1)},r.reversed=function(t){return arguments.length?(!!t!==this.reversed()&&this.timeScale(-this._rts||(t?-G:0)),this):this._rts<0},r.invalidate=function(){return this._initted=this._act=0,this._zTime=-G,this},r.isActive=function(){var t,r=this.parent||this._dp,e=this._start;return!(r&&!(this._ts&&this._initted&&r.isActive()&&(t=r.rawTime(!0))>=e&&t<this.endTime(!0)-G))},r.eventCallback=function(t,r,e){var $=this.vars;return arguments.length>1?(r?($[t]=r,e&&($[t+\"Params\"]=e),\"onUpdate\"===t&&(this._onUpdate=r)):delete $[t],this):$[t]},r.then=function(t){var r=this;return new Promise(function(e){var $=L(t)?t:kc,a=function(){var t=r.then;r.then=null,L($)&&($=$(r))&&($.then||$===r)&&(r.then=t),e($),r.then=t};r._initted&&1===r.totalProgress()&&r._ts>=0||!r._tTime&&r._ts<0?a():r._prom=a})},r.kill=function(){Ya(this)},t}();fa($a.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-G,_prom:0,_ps:!1,_rts:1});var W=function(t){function r(r,e){var $;return void 0===r&&(r={}),($=t.call(this,r,e)||this).labels={},$.smoothChildTiming=!!r.smoothChildTiming,$.autoRemoveChildren=!!r.autoRemoveChildren,$._sort=V(r.sortChildren),$.parent&&jb($.parent,ma($)),r.scrollTrigger&&oc(ma($),r.scrollTrigger),$}Tb(r,t);var e=r.prototype;return e.to=function(t,r,e){return new J(t,Wa(arguments,0,this),R(this,ia(r)?arguments[3]:e)),this},e.from=function(t,r,e){return new J(t,Wa(arguments,1,this),R(this,ia(r)?arguments[3]:e)),this},e.fromTo=function(t,r,e,$){return new J(t,Wa(arguments,2,this),R(this,ia(r)?arguments[4]:$)),this},e.set=function(t,r,e){return r.duration=0,r.parent=this,gb(r).repeatDelay||(r.repeat=0),r.immediateRender=!!r.immediateRender,new J(t,r,R(this,e),1),this},e.call=function(t,r,e){return pa(this,J.delayedCall(0,t,r),R(this,e))},e.staggerTo=function(t,r,e,$,a,i,n){return e.duration=r,e.stagger=e.stagger||$,e.onComplete=i,e.onCompleteParams=n,e.parent=this,new J(t,e,R(this,a)),this},e.staggerFrom=function(t,r,e,$,a,i,n){return e.runBackwards=1,gb(e).immediateRender=V(e.immediateRender),this.staggerTo(t,r,e,$,a,i,n)},e.staggerFromTo=function(t,r,e,$,a,i,n,o){return $.startAt=e,gb($).immediateRender=V($.immediateRender),this.staggerTo(t,r,$,a,i,n,o)},e.render=function(t,r,e){var $,a,i,n,o,s,_,T,p,S,u,N,l=this._time,v=this._dirty?this.totalDuration():this._tDur,h=this._dur,c=this!==K&&t>v-G&&t>=0?v:t<G?0:t,d=this._zTime<0!=t<0&&(this._initted||!h);if(c!==this._tTime||e||d){if(l!==this._time&&h&&(c+=this._time-l,t+=this._time-l),$=c,p=this._start,s=!(T=this._ts),d&&(h||(l=this._zTime),(t||!r)&&(this._zTime=t)),this._repeat){if(u=this._yoyo,o=h+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*o+t,r,e);if($=j(c%o),c===v?(n=this._repeat,$=h):((n=~~(c/o))&&n===c/o&&($=h,n--),$>h&&($=h)),S=Ka(this._tTime,o),!l&&this._tTime&&S!==n&&(S=n),u&&1&n&&($=h-$,N=1),n!==S&&!this._lock){var f=u&&1&S,m=f===(u&&1&n);if(n<S&&(f=!f),l=f?0:h,this._lock=1,this.render(l||(N?0:j(n*o)),r,!h)._lock=0,!r&&this.parent&&da(this,\"onRepeat\"),this.vars.repeatRefresh&&!N&&(this.invalidate()._lock=1),l!==this._time||s!==!this._ts)return this;if(h=this._dur,v=this._tDur,m&&(this._lock=2,l=f?h:-1e-4,this.render(l,!0),this.vars.repeatRefresh&&!N&&this.invalidate()),this._lock=0,!this._ts&&!s)return this;Ec(this,N)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(_=wd(this,j(l),j($)))&&(c-=$-($=_._start)),this._tTime=c,this._time=$,this._act=!T,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=t,l=0),!l&&($||!h&&t>=0)&&!r&&da(this,\"onStart\"),$>=l&&t>=0)for(a=this._first;a;){if(i=a._next,(a._act||$>=a._start)&&a._ts&&_!==a){if(a.parent!==this)return this.render(t,r,e);if(a.render(a._ts>0?($-a._start)*a._ts:(a._dirty?a.totalDuration():a._tDur)+($-a._start)*a._ts,r,e),$!==this._time||!this._ts&&!s){_=0,i&&(c+=this._zTime=-G);break}}a=i}else{a=this._last;for(var g=t<0?t:$;a;){if(i=a._prev,(a._act||g<=a._end)&&a._ts&&_!==a){if(a.parent!==this)return this.render(t,r,e);if(a.render(a._ts>0?(g-a._start)*a._ts:(a._dirty?a.totalDuration():a._tDur)+(g-a._start)*a._ts,r,e),$!==this._time||!this._ts&&!s){_=0,i&&(c+=this._zTime=g?-G:G);break}}a=i}}if(_&&!r&&(this.pause(),_.render($>=l?0:-G)._zTime=$>=l?1:-1,this._ts))return this._start=p,Cb(this),this.render(t,r,e);this._onUpdate&&!r&&da(this,\"onUpdate\",!0),(c===v&&v>=this.totalDuration()||!c&&l)&&(p!==this._start&&Math.abs(T)===Math.abs(this._ts)||this._lock||((t||!h)&&(c===v&&this._ts>0||!c&&this._ts<0)&&ua(this,1),r||t<0&&!l||!c&&!l||(da(this,c===v?\"onComplete\":\"onReverseComplete\",!0),this._prom&&!(c<v&&this.timeScale()>0)&&this._prom())))}return this},e.add=function(t,r){var e=this;if(ia(r)||(r=R(this,r)),!(t instanceof $a)){if(ea(t))return t.forEach(function(t){return e.add(t,r)}),this;if(Q(t))return this.addLabel(t,r);if(!L(t))return this;t=J.delayedCall(0,t)}return this!==t?pa(this,t,r):this},e.getChildren=function(t,r,e,$){void 0===t&&(t=!0),void 0===r&&(r=!0),void 0===e&&(e=!0),void 0===$&&($=-ja);for(var a=[],i=this._first;i;)i._start>=$&&(i instanceof J?r&&a.push(i):(e&&a.push(i),t&&a.push.apply(a,i.getChildren(!0,r,e)))),i=i._next;return a},e.getById=function(t){for(var r=this.getChildren(1,1,1),e=r.length;e--;)if(r[e].vars.id===t)return r[e]},e.remove=function(t){return Q(t)?this.removeLabel(t):L(t)?this.killTweensOf(t):(hb(this,t),t===this._recent&&(this._recent=this._last),Ba(this))},e.totalTime=function(r,e){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=j(ga.time-(this._ts>0?r/this._ts:(this.totalDuration()-r)/-this._ts))),t.prototype.totalTime.call(this,r,e),this._forcing=0,this):this._tTime},e.addLabel=function(t,r){return this.labels[t]=R(this,r),this},e.removeLabel=function(t){return delete this.labels[t],this},e.addPause=function(t,r,e){var $=J.delayedCall(0,r||Va,e);return $.data=\"isPause\",this._hasPause=1,pa(this,$,R(this,t))},e.removePause=function(t){var r=this._first;for(t=R(this,t);r;)r._start===t&&\"isPause\"===r.data&&ua(r),r=r._next},e.killTweensOf=function(t,r,e){for(var $=this.getTweensOf(t,e),a=$.length;a--;)lb!==$[a]&&$[a].kill(t,r);return this},e.getTweensOf=function(t,r){for(var e,$=[],a=ka(t),i=this._first,n=ia(r);i;)i instanceof J?od(i._targets,a)&&(n?(!lb||i._initted&&i._ts)&&i.globalTime(0)<=r&&i.globalTime(i.totalDuration())>r:!r||i.isActive())&&$.push(i):(e=i.getTweensOf(a,r)).length&&$.push.apply($,e),i=i._next;return $},e.tweenTo=function(t,r){r=r||{};var e=this,$=R(e,t),a=r,i=a.startAt,n=a.onStart,o=a.onStartParams,s=a.immediateRender,_=J.to(e,fa({ease:\"none\",lazy:!1,immediateRender:!1,time:$,overwrite:\"auto\",duration:r.duration||Math.abs(($-(i&&\"time\"in i?i.time:e._time))/e.timeScale())||G,onStart:function(){e.pause();var t=r.duration||Math.abs(($-e._time)/e.timeScale());_._dur!==t&&La(_,t,0,1).render(_._time,!0,!0),n&&n.apply(_,o||[])}},r));return s?_.render(0):_},e.tweenFromTo=function(t,r,e){return this.tweenTo(r,fa({startAt:{time:R(this,t)}},e))},e.recent=function(){return this._recent},e.nextLabel=function(t){return void 0===t&&(t=this._time),yc(this,R(this,t))},e.previousLabel=function(t){return void 0===t&&(t=this._time),yc(this,R(this,t),1)},e.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.previousLabel(this._time+G)},e.shiftChildren=function(t,r,e){void 0===e&&(e=0);for(var $,a=this._first,i=this.labels;a;)a._start>=e&&(a._start+=t,a._end+=t),a=a._next;if(r)for($ in i)i[$]>=e&&(i[$]+=t);return Ba(this)},e.invalidate=function(){var r=this._first;for(this._lock=0;r;)r.invalidate(),r=r._next;return t.prototype.invalidate.call(this)},e.clear=function(t){void 0===t&&(t=!0);for(var r,e=this._first;e;)r=e._next,this.remove(e),e=r;return this._dp&&(this._time=this._tTime=this._pTime=0),t&&(this.labels={}),Ba(this)},e.totalDuration=function(t){var r,e,$,a=0,i=this._last,n=ja;if(arguments.length)return this.timeScale((this._repeat<0?this.duration():this.totalDuration())/(this.reversed()?-t:t));if(this._dirty){for($=this.parent;i;)r=i._prev,i._dirty&&i.totalDuration(),(e=i._start)>n&&this._sort&&i._ts&&!this._lock?(this._lock=1,pa(this,i,e-i._delay,1)._lock=0):n=e,e<0&&i._ts&&(a-=e,(!$&&!this._dp||$&&$.smoothChildTiming)&&(this._start+=e/this._ts,this._time-=e,this._tTime-=e),this.shiftChildren(-e,!1,-Infinity),n=0),i._end>a&&i._ts&&(a=i._end),i=r;La(this,this===K&&this._time>a?this._time:a,1,1),this._dirty=0}return this._tDur},r.updateRoot=function(t){if(K._ts&&(ic(K,ib(t,K)),hd=ga.frame),ga.frame>=nd){nd+=U.autoSleep||120;var r=K._first;if((!r||!r._ts)&&U.autoSleep&&ga._listeners.length<2){for(;r&&!r._ts;)r=r._next;r||ga.sleep()}}},r}($a);fa(W.prototype,{_lock:0,_hasPause:0,_forcing:0});var lb,Nd=function(t,r,e,$,a,i,n){var o,s,_,T,p,S,u,N,l=new X(this._pt,t,r,0,1,Lc,null,a),v=0,h=0;for(l.b=e,l.e=$,e+=\"\",(u=~($+=\"\").indexOf(\"random(\"))&&($=kb($)),i&&(i(N=[e,$],t,r),e=N[0],$=N[1]),s=e.match(vb)||[];o=vb.exec($);)T=o[0],p=$.substring(v,o.index),_?_=(_+1)%5:\"rgba(\"===p.substr(-5)&&(_=1),T!==s[h++]&&(S=parseFloat(s[h-1])||0,l._pt={_next:l._pt,p:p||1===h?p:\",\",s:S,c:\"=\"===T.charAt(1)?parseFloat(T.substr(2))*(\"-\"===T.charAt(0)?-1:1):parseFloat(T)-S,m:_&&_<4?Math.round:0},v=vb.lastIndex);return l.c=v<$.length?$.substring(v,$.length):\"\",l.fp=n,(ac.test($)||u)&&(l.e=0),this._pt=l,l},Ib=function(t,r,e,$,a,i,n,o,s){L($)&&($=$(a||0,t,i));var _,T=t[r],p=\"get\"!==e?e:L(T)?s?t[r.indexOf(\"set\")||!L(t[\"get\"+r.substr(3)])?r:\"get\"+r.substr(3)](s):t[r]():T,S=L(T)?s?Sd:Jc:Jb;if(Q($)&&(~$.indexOf(\"random(\")&&($=kb($)),\"=\"===$.charAt(1)&&($=parseFloat(p)+parseFloat($.substr(2))*(\"-\"===$.charAt(0)?-1:1)+(ca(p)||0))),p!==$)return isNaN(p*$)?(!T&&!(r in t)&&xb(r,$),Nd.call(this,t,r,p,$,S,o||U.stringFilter,s)):(_=new X(this._pt,t,r,+p||0,$-(p||0),\"boolean\"==typeof T?Ud:Kc,0,S),s&&(_.fp=s),n&&_.modifier(n,this,t),this._pt=_)},Od=function(t,r,e,$,a){if(L(t)&&(t=_a(t,a,r,e,$)),!oa(t)||t.style&&t.nodeType||ea(t)||$b(t))return Q(t)?_a(t,a,r,e,$):t;var i,n={};for(i in t)n[i]=_a(t[i],a,r,e,$);return n},Hc=function(t,r,e,$,a,i){var n,o,s,_;if(aa[t]&&!1!==(n=new aa[t]).init(a,n.rawVars?r[t]:Od(r[t],$,a,i,e),e,$,i)&&(e._pt=o=new X(e._pt,a,t,0,1,n.render,n,0,n.priority),e!==Ua))for(s=e._ptLookup[e._targets.indexOf(a)],_=n._props.length;_--;)s[n._props[_]]=o;return n},Pd=function t(r,e){var $,a,i,n,o,s,_,T,p,S,u,N,l,v=r.vars,h=v.ease,c=v.startAt,d=v.immediateRender,f=v.lazy,m=v.onUpdate,g=v.onUpdateParams,x=v.callbackScope,y=v.runBackwards,w=v.yoyoEase,b=v.keyframes,P=v.autoRevert,k=r._dur,E=r._startAt,A=r._targets,D=r.parent,C=D&&\"nested\"===D.data?D.parent._targets:A,M=\"auto\"===r._overwrite&&!Ub,F=r.timeline;if(F&&(!b||!h)&&(h=\"none\"),r._ease=Oa(h,Ha.ease),r._yEase=w?Dc(Oa(!0===w?h:w,Ha.ease)):0,w&&r._yoyo&&!r._repeat&&(w=r._yEase,r._yEase=r._ease,r._ease=w),!F){if(N=(T=A[0]?Aa(A[0]).harness:0)&&v[T.prop],$=Bb(v,yb),E&&E.render(-1,!0).kill(),c){if(ua(r._startAt=J.set(A,fa({data:\"isStart\",overwrite:!1,parent:D,immediateRender:!0,lazy:V(f),startAt:null,delay:0,onUpdate:m,onUpdateParams:g,callbackScope:x,stagger:0},c))),d)if(e>0)P||(r._startAt=0);else if(k&&!(e<0&&E))return void(e&&(r._zTime=e))}else if(y&&k)if(E)!P&&(r._startAt=0);else if(e&&(d=!1),i=fa({overwrite:!1,data:\"isFromStart\",lazy:d&&V(f),immediateRender:d,stagger:0,parent:D},$),N&&(i[T.prop]=N),ua(r._startAt=J.set(A,i)),d){if(!e)return}else t(r._startAt,G);for(r._pt=0,f=k&&V(f)||f&&!k,a=0;a<A.length;a++){if(_=(o=A[a])._gsap||Ab(A)[a]._gsap,r._ptLookup[a]=S={},fc[_.id]&&ta.length&&fb(),u=C===A?a:C.indexOf(o),T&&!1!==(p=new T).init(o,N||$,r,u,C)&&(r._pt=n=new X(r._pt,o,p.name,0,1,p.render,p,0,p.priority),p._props.forEach(function(t){S[t]=n}),p.priority&&(s=1)),!T||N)for(i in $)aa[i]&&(p=Hc(i,$,r,u,o,C))?p.priority&&(s=1):S[i]=n=Ib.call(r,o,i,\"get\",$[i],u,C,0,v.stringFilter);r._op&&r._op[a]&&r.kill(o,r._op[a]),M&&r._pt&&(lb=r,K.killTweensOf(o,S,r.globalTime(0)),l=!r.parent,lb=0),r._pt&&f&&(fc[_.id]=1)}s&&Mc(r),r._onInit&&r._onInit(r)}r._from=!F&&!!v.runBackwards,r._onUpdate=m,r._initted=(!r._op||r._pt)&&!l},Qd=function(t,r){var e,$,a,i,n=t[0]?Aa(t[0]).harness:0,o=n&&n.aliases;if(!o)return r;for($ in e=Ja({},r),o)if($ in e)for(a=(i=o[$].split(\",\")).length;a--;)e[i[a]]=e[$];return e},_a=function(t,r,e,$,a){return L(t)?t.call(r,e,$,a):Q(t)&&~t.indexOf(\"random(\")?kb(t):t},Ic=gc+\"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase\",Rd=(Ic+\",id,stagger,delay,duration,paused,scrollTrigger\").split(\",\"),J=function(t){function r(r,e,$,a){var i;\"number\"==typeof e&&($.duration=e,e=$,$=null);var n,o,s,_,T,p,S,u,N=(i=t.call(this,a?e:gb(e),$)||this).vars,l=N.duration,v=N.delay,h=N.immediateRender,c=N.stagger,d=N.overwrite,f=N.keyframes,m=N.defaults,g=N.scrollTrigger,x=N.yoyoEase,y=i.parent,w=(ea(r)||$b(r)?ia(r[0]):\"length\"in e)?[r]:ka(r);if(i._targets=w.length?Ab(w):dc(\"GSAP target \"+r+\" not found. https://greensock.com\",!U.nullTargetWarn)||[],i._ptLookup=[],i._overwrite=d,f||c||Zb(l)||Zb(v)){if(e=i.vars,(n=i.timeline=new W({data:\"nested\",defaults:m||{}})).kill(),n.parent=n._dp=ma(i),n._start=0,f)fa(n.vars.defaults,{ease:\"none\"}),f.forEach(function(t){return n.to(w,t,\">\")});else{if(_=w.length,S=c?tc(c):Va,oa(c))for(T in c)~Ic.indexOf(T)&&(u||(u={}),u[T]=c[T]);for(o=0;o<_;o++){for(T in s={},e)Rd.indexOf(T)<0&&(s[T]=e[T]);s.stagger=0,x&&(s.yoyoEase=x),u&&Ja(s,u),p=w[o],s.duration=+_a(l,ma(i),o,p,w),s.delay=(+_a(v,ma(i),o,p,w)||0)-i._delay,!c&&1===_&&s.delay&&(i._delay=v=s.delay,i._start+=v,s.delay=0),n.to(p,s,S(o,p,w))}n.duration()?l=v=0:i.timeline=0}l||i.duration(l=n.duration())}else i.timeline=0;return!0!==d||Ub||(lb=ma(i),K.killTweensOf(w),lb=0),y&&jb(y,ma(i)),(h||!l&&!f&&i._start===j(y._time)&&V(h)&&td(ma(i))&&\"nested\"!==y.data)&&(i._tTime=-G,i.render(Math.max(0,-v))),g&&oc(ma(i),g),i}Tb(r,t);var e=r.prototype;return e.render=function(t,r,e){var $,a,i,n,o,s,_,T,p,S=this._time,u=this._tDur,N=this._dur,l=t>u-G&&t>=0?u:t<G?0:t;if(N){if(l!==this._tTime||!t||e||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=t<0){if($=l,T=this.timeline,this._repeat){if(n=N+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*n+t,r,e);if($=j(l%n),l===u?(i=this._repeat,$=N):((i=~~(l/n))&&i===l/n&&($=N,i--),$>N&&($=N)),(s=this._yoyo&&1&i)&&(p=this._yEase,$=N-$),o=Ka(this._tTime,n),$===S&&!e&&this._initted)return this;i!==o&&(T&&this._yEase&&Ec(T,s),!this.vars.repeatRefresh||s||this._lock||(this._lock=e=1,this.render(j(n*i),!0).invalidate()._lock=0))}if(!this._initted){if(pc(this,t<0?t:$,e,r))return this._tTime=0,this;if(N!==this._dur)return this.render(t,r,e)}for(this._tTime=l,this._time=$,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=_=(p||this._ease)($/N),this._from&&(this.ratio=_=1-_),$&&!S&&!r&&da(this,\"onStart\"),a=this._pt;a;)a.r(_,a.d),a=a._next;T&&T.render(t<0?t:!$&&s?-G:T._dur*_,r,e)||this._startAt&&(this._zTime=t),this._onUpdate&&!r&&(t<0&&this._startAt&&this._startAt.render(t,!0,e),da(this,\"onUpdate\")),this._repeat&&i!==o&&this.vars.onRepeat&&!r&&this.parent&&da(this,\"onRepeat\"),l!==this._tDur&&l||this._tTime!==l||(t<0&&this._startAt&&!this._onUpdate&&this._startAt.render(t,!0,!0),(t||!N)&&(l===this._tDur&&this._ts>0||!l&&this._ts<0)&&ua(this,1),r||t<0&&!S||!l&&!S||(da(this,l===u?\"onComplete\":\"onReverseComplete\",!0),this._prom&&!(l<u&&this.timeScale()>0)&&this._prom()))}}else vd(this,t,r,e);return this},e.targets=function(){return this._targets},e.invalidate=function(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),t.prototype.invalidate.call(this)},e.kill=function(t,r){if(void 0===r&&(r=\"all\"),!(t||r&&\"all\"!==r))return this._lazy=this._pt=0,this.parent?Ya(this):this;if(this.timeline){var e=this.timeline.totalDuration();return this.timeline.killTweensOf(t,r,lb&&!0!==lb.vars.overwrite)._first||Ya(this),this.parent&&e!==this.timeline.totalDuration()&&La(this,this._dur*this.timeline._tDur/e,0,1),this}var $,a,i,n,o,s,_,T=this._targets,p=t?ka(t):T,S=this._ptLookup,u=this._pt;if((!r||\"all\"===r)&&qd(T,p))return\"all\"===r&&(this._pt=0),Ya(this);for($=this._op=this._op||[],\"all\"!==r&&(Q(r)&&(o={},ba(r,function(t){return o[t]=1}),r=o),r=Qd(T,r)),_=T.length;_--;)if(~p.indexOf(T[_]))for(o in a=S[_],\"all\"===r?($[_]=r,n=a,i={}):(i=$[_]=$[_]||{},n=r),n)(s=a&&a[o])&&(\"kill\"in s.d&&!0!==s.d.kill(o)||hb(this,s,\"_pt\"),delete a[o]),\"all\"!==i&&(i[o]=1);return this._initted&&!this._pt&&u&&Ya(this),this},r.to=function(t,e){return new r(t,e,arguments[2])},r.from=function(t,e){return new r(t,Wa(arguments,1))},r.delayedCall=function(t,e,$,a){return new r(e,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:t,onComplete:e,onReverseComplete:e,onCompleteParams:$,onReverseCompleteParams:$,callbackScope:a})},r.fromTo=function(t,e,$){return new r(t,Wa(arguments,2))},r.set=function(t,e){return e.duration=0,e.repeatDelay||(e.repeat=0),new r(t,e)},r.killTweensOf=function(t,r,e){return K.killTweensOf(t,r,e)},r}($a);fa(J.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),ba(\"staggerTo,staggerFrom,staggerFromTo\",function(t){J[t]=function(){var r=new W,e=Db.call(arguments,0);return e.splice(\"staggerFromTo\"===t?5:4,0,0),r[t].apply(r,e)}});var Jb=function(t,r,e){return t[r]=e},Jc=function(t,r,e){return t[r](e)},Sd=function(t,r,e,$){return t[r]($.fp,e)},Td=function(t,r,e){return t.setAttribute(r,e)},Kb=function(t,r){return L(t[r])?Jc:tb(t[r])&&t.setAttribute?Td:Jb},Kc=function(t,r){return r.set(r.t,r.p,Math.round(1e4*(r.s+r.c*t))/1e4,r)},Ud=function(t,r){return r.set(r.t,r.p,!!(r.s+r.c*t),r)},Lc=function(t,r){var e=r._pt,$=\"\";if(!t&&r.b)$=r.b;else if(1===t&&r.e)$=r.e;else{for(;e;)$=e.p+(e.m?e.m(e.s+e.c*t):Math.round(1e4*(e.s+e.c*t))/1e4)+$,e=e._next;$+=r.c}r.set(r.t,r.p,$,r)},Lb=function(t,r){for(var e=r._pt;e;)e.r(t,e.d),e=e._next},Vd=function(t,r,e,$){for(var a,i=this._pt;i;)a=i._next,i.p===$&&i.modifier(t,r,e),i=a},Wd=function(t){for(var r,e,$=this._pt;$;)e=$._next,$.p===t&&!$.op||$.op===t?hb(this,$,\"_pt\"):$.dep||(r=1),$=e;return!r},Xd=function(t,r,e,$){$.mSet(t,r,$.m.call($.tween,e,$.mt),$)},Mc=function(t){for(var r,e,$,a,i=t._pt;i;){for(r=i._next,e=$;e&&e.pr>i.pr;)e=e._next;(i._prev=e?e._prev:a)?i._prev._next=i:$=i,(i._next=e)?e._prev=i:a=i,i=r}t._pt=$},X=function(){function t(t,r,e,$,a,i,n,o,s){this.t=r,this.s=$,this.c=a,this.p=e,this.r=i||Kc,this.d=n||this,this.set=o||Jb,this.pr=s||0,this._next=t,t&&(t._prev=this)}return t.prototype.modifier=function(t,r,e){this.mSet=this.mSet||this.set,this.set=Xd,this.m=t,this.mt=e,this.tween=r},t}();ba(gc+\"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger\",function(t){return yb[t]=1}),Y.TweenMax=Y.TweenLite=J,Y.TimelineLite=Y.TimelineMax=W,K=new W({sortChildren:!1,defaults:Ha,autoRemoveChildren:!0,id:\"root\",smoothChildTiming:!0}),U.stringFilter=Cc;var mb={registerPlugin:function(){for(var t=arguments.length,r=new Array(t),e=0;e<t;e++)r[e]=arguments[e];r.forEach(function(t){return Gd(t)})},timeline:function(t){return new W(t)},getTweensOf:function(t,r){return K.getTweensOf(t,r)},getProperty:function(t,r,e,$){Q(t)&&(t=ka(t)[0]);var a=Aa(t||{}).get,i=e?kc:jc;return\"native\"===e&&(e=\"\"),t?r?i((aa[r]&&aa[r].get||a)(t,r,e,$)):function(r,e,$){return i((aa[r]&&aa[r].get||a)(t,r,e,$))}:t},quickSetter:function(t,r,e){if((t=ka(t)).length>1){var $=t.map(function(t){return la.quickSetter(t,r,e)}),a=$.length;return function(t){for(var r=a;r--;)$[r](t)}}t=t[0]||{};var i=aa[r],n=Aa(t),o=n.harness&&(n.harness.aliases||{})[r]||r,s=i?function(r){var $=new i;Ua._pt=0,$.init(t,e?r+e:r,Ua,0,[t]),$.render(1,$),Ua._pt&&Lb(1,Ua)}:n.set(t,o);return i?s:function(r){return s(t,o,e?r+e:r,n,1)}},isTweening:function(t){return K.getTweensOf(t,!0).length>0},defaults:function(t){return t&&t.ease&&(t.ease=Oa(t.ease,Ha.ease)),lc(Ha,t||{})},config:function(t){return lc(U,t||{})},registerEffect:function(t){var r=t.name,e=t.effect,$=t.plugins,a=t.defaults,i=t.extendTimeline;($||\"\").split(\",\").forEach(function(t){return t&&!aa[t]&&!Y[t]&&dc(r+\" effect requires \"+t+\" plugin.\")}),zb[r]=function(t,r,$){return e(ka(t),fa(r||{},a),$)},i&&(W.prototype[r]=function(t,e,$){return this.add(zb[r](t,oa(e)?e:($=e)&&{},this),$)})},registerEase:function(t,r){q[t]=Oa(r)},parseEase:function(t,r){return arguments.length?Oa(t,r):q},getById:function(t){return K.getById(t)},exportRoot:function(t,r){void 0===t&&(t={});var e,$,a=new W(t);for(a.smoothChildTiming=V(t.smoothChildTiming),K.remove(a),a._dp=0,a._time=a._tTime=K._time,e=K._first;e;)$=e._next,!r&&!e._dur&&e instanceof J&&e.vars.onComplete===e._targets[0]||pa(a,e,e._start-e._delay),e=$;return pa(K,a,0),a},utils:{wrap:Dd,wrapYoyo:Ed,distribute:tc,random:vc,snap:uc,normalize:Cd,getUnit:ca,clamp:yd,splitColor:zc,toArray:ka,mapRange:xc,pipe:Ad,unitize:Bd,interpolate:Fd,shuffle:sc},install:cc,effects:zb,ticker:ga,updateRoot:W.updateRoot,plugins:aa,globalTimeline:K,core:{PropTween:X,globals:ec,Tween:J,Timeline:W,Animation:$a,getCache:Aa,_removeLinkedListItem:hb,suppressOverwrites:function(t){return Ub=t}}};ba(\"to,from,fromTo,delayedCall,set,killTweensOf\",function(t){return mb[t]=J[t]}),ga.add(W.updateRoot),Ua=mb.to({},{duration:0});var Yd=function(t,r){for(var e=t._pt;e&&e.p!==r&&e.op!==r&&e.fp!==r;)e=e._next;return e},Zd=function(t,r){var e,$,a,i=t._targets;for(e in r)for($=i.length;$--;)(a=t._ptLookup[$][e])&&(a=a.d)&&(a._pt&&(a=Yd(a,e)),a&&a.modifier&&a.modifier(r[e],t,i[$],e))},Mb=function(t,r){return{name:t,rawVars:1,init:function(t,e,$){$._onInit=function(t){var $,a;if(Q(e)&&($={},ba(e,function(t){return $[t]=1}),e=$),r){for(a in $={},e)$[a]=r(e[a]);e=$}Zd(t,e)}}}},la=mb.registerPlugin({name:\"attr\",init:function(t,r,e,$,a){var i,n;for(i in r)(n=this.add(t,\"setAttribute\",(t.getAttribute(i)||0)+\"\",r[i],$,a,0,0,i))&&(n.op=i),this._props.push(i)}},{name:\"endArray\",init:function(t,r){for(var e=r.length;e--;)this.add(t,e,t[e]||0,r[e])}},Mb(\"roundProps\",Eb),Mb(\"modifiers\"),Mb(\"snap\",uc))||mb;J.version=W.version=la.version=\"3.6.0\",gd=1,Yb()&&Na();var a=q.Power0,b=q.Power1,c=q.Power2,d=q.Power3,e=q.Power4,f=q.Linear,g=q.Quad,h=q.Cubic,i=q.Quart,k=q.Quint,l=q.Strong,m=q.Elastic,n=q.Back,o=q.SteppedEase,p=q.Bounce,r=q.Sine,s=q.Expo,t=q.Circ;var $d,qa,ab,Nc,Pa,nb,_d,ae,be=function(){return\"undefined\"!=typeof window},wa={},Da=180/Math.PI,Qa=Math.PI/180,Ra=Math.atan2,Oc=1e8,Pc=/([A-Z])/g,ce=/(?:left|right|width|margin|padding|x)/i,de=/[\\s,\\(]\\S/,xa={autoAlpha:\"opacity,visibility\",scale:\"scaleX,scaleY\",alpha:\"opacity\"},Qc=function(r,t){return t.set(t.t,t.p,Math.round(1e4*(t.s+t.c*r))/1e4+t.u,t)},ee=function(r,t){return t.set(t.t,t.p,1===r?t.e:Math.round(1e4*(t.s+t.c*r))/1e4+t.u,t)},fe=function(r,t){return t.set(t.t,t.p,r?Math.round(1e4*(t.s+t.c*r))/1e4+t.u:t.b,t)},ge=function(r,t){var $=t.s+t.c*r;t.set(t.t,t.p,~~($+($<0?-.5:.5))+t.u,t)},Rc=function(r,t){return t.set(t.t,t.p,r?t.e:t.b,t)},Sc=function(r,t){return t.set(t.t,t.p,1!==r?t.b:t.e,t)},he=function(r,t,$){return r.style[t]=$},ie=function(r,t,$){return r.style.setProperty(t,$)},je=function(r,t,$){return r._gsap[t]=$},ke=function(r,t,$){return r._gsap.scaleX=r._gsap.scaleY=$},le=function(r,t,$,e,p){var a=r._gsap;a.scaleX=a.scaleY=$,a.renderTransform(p,a)},me=function(r,t,$,e,p){var a=r._gsap;a[t]=$,a.renderTransform(p,a)},ha=\"transform\",Ea=ha+\"Origin\",Nb=function(r,t){var $=qa.createElementNS?qa.createElementNS((t||\"http://www.w3.org/1999/xhtml\").replace(/^https/,\"http\"),r):qa.createElement(r);return $.style?$:qa.createElement(r)},ra=function r(t,$,e){var p=getComputedStyle(t);return p[$]||p.getPropertyValue($.replace(Pc,\"-$1\").toLowerCase())||p.getPropertyValue($)||!e&&r(t,Sa($)||$,1)||\"\"},Tc=\"O,Moz,ms,Ms,Webkit\".split(\",\"),Sa=function(r,t,$){var e=(t||Pa).style,p=5;if(r in e&&!$)return r;for(r=r.charAt(0).toUpperCase()+r.substr(1);p--&&!(Tc[p]+r in e););return p<0?null:(3===p?\"ms\":p>=0?Tc[p]:\"\")+r},Ob=function(){be()&&window.document&&($d=window,qa=$d.document,ab=qa.documentElement,Pa=Nb(\"div\")||{style:{}},nb=Nb(\"div\"),ha=Sa(ha),Ea=ha+\"Origin\",Pa.style.cssText=\"border-width:0;line-height:0;position:absolute;padding:0\",ae=!!Sa(\"perspective\"),Nc=1)},Pb=function r(t){var $,e=Nb(\"svg\",this.ownerSVGElement&&this.ownerSVGElement.getAttribute(\"xmlns\")||\"http://www.w3.org/2000/svg\"),p=this.parentNode,a=this.nextSibling,n=this.style.cssText;if(ab.appendChild(e),e.appendChild(this),this.style.display=\"block\",t)try{$=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=r}catch(o){}else this._gsapBBox&&($=this._gsapBBox());return p&&(a?p.insertBefore(this,a):p.appendChild(this)),ab.removeChild(e),this.style.cssText=n,$},Uc=function(r,t){for(var $=t.length;$--;)if(r.hasAttribute(t[$]))return r.getAttribute(t[$])},Vc=function(r){var t;try{t=r.getBBox()}catch($){t=Pb.call(r,!0)}return t&&(t.width||t.height)||r.getBBox===Pb||(t=Pb.call(r,!0)),!t||t.width||t.x||t.y?t:{x:+Uc(r,[\"x\",\"cx\",\"x1\"])||0,y:+Uc(r,[\"y\",\"cy\",\"y1\"])||0,width:0,height:0}},Wc=function(r){return!(!r.getCTM||r.parentNode&&!r.ownerSVGElement||!Vc(r))},ob=function(r,t){if(t){var $=r.style;t in wa&&t!==Ea&&(t=ha),$.removeProperty?(\"ms\"!==t.substr(0,2)&&\"webkit\"!==t.substr(0,6)||(t=\"-\"+t),$.removeProperty(t.replace(Pc,\"-$1\").toLowerCase())):$.removeAttribute(t)}},ya=function(r,t,$,e,p,a){var n=new X(r._pt,t,$,0,1,a?Sc:Rc);return r._pt=n,n.b=e,n.e=p,r._props.push($),n},Xc={deg:1,rad:1,turn:1},za=function r(t,$,e,p){var a,n,o,i,s=parseFloat(e)||0,b=(e+\"\").trim().substr((s+\"\").length)||\"px\",_=Pa.style,v=ce.test($),Z=\"svg\"===t.tagName.toLowerCase(),l=(Z?\"client\":\"offset\")+(v?\"Width\":\"Height\"),c=\"px\"===p,d=\"%\"===p;return p===b||!s||Xc[p]||Xc[b]?s:(\"px\"!==b&&!c&&(s=r(t,$,e,\"px\")),i=t.getCTM&&Wc(t),!d&&\"%\"!==b||!wa[$]&&!~$.indexOf(\"adius\")?(_[v?\"width\":\"height\"]=100+(c?b:p),n=~$.indexOf(\"adius\")||\"em\"===p&&t.appendChild&&!Z?t:t.parentNode,i&&(n=(t.ownerSVGElement||{}).parentNode),n&&n!==qa&&n.appendChild||(n=qa.body),(o=n._gsap)&&d&&o.width&&v&&o.time===ga.time?j(s/o.width*100):((d||\"%\"===b)&&(_.position=ra(t,\"position\")),n===t&&(_.position=\"static\"),n.appendChild(Pa),a=Pa[l],n.removeChild(Pa),_.position=\"absolute\",v&&d&&((o=Aa(n)).time=ga.time,o.width=n[l]),j(c?a*s/100:a&&s?100/a*s:0))):(a=i?t.getBBox()[v?\"width\":\"height\"]:t[l],j(d?s/a*100:s/100*a)))},Ta=function(r,t,$,e){var p;return Nc||Ob(),t in xa&&\"transform\"!==t&&~(t=xa[t]).indexOf(\",\")&&(t=t.split(\",\")[0]),wa[t]&&\"transform\"!==t?(p=qb(r,e),p=\"transformOrigin\"!==t?p[t]:rb(ra(r,Ea))+\" \"+p.zOrigin+\"px\"):(!(p=r.style[t])||\"auto\"===p||e||~(p+\"\").indexOf(\"calc(\"))&&(p=pb[t]&&pb[t](r,t,$)||ra(r,t)||hc(r,t)||(\"opacity\"===t?1:0)),$&&!~(p+\"\").trim().indexOf(\" \")?za(r,t,p,$)+$:p},ne=function(r,t,$,e){if(!$||\"none\"===$){var p=Sa(t,r,1),a=p&&ra(r,p,1);a&&a!==$?(t=p,$=a):\"borderColor\"===t&&($=ra(r,\"borderTopColor\"))}var n,o,i,s,b,_,v,Z,l,c,d,m,f=new X(this._pt,r.style,t,0,1,Lc),g=0,u=0;if(f.b=$,f.e=e,$+=\"\",\"auto\"===(e+=\"\")&&(r.style[t]=e,e=ra(r,t)||e,r.style[t]=$),n=[$,e],Cc(n),e=n[1],i=($=n[0]).match(Ia)||[],(e.match(Ia)||[]).length){for(;o=Ia.exec(e);)v=o[0],l=e.substring(g,o.index),b?b=(b+1)%5:\"rgba(\"!==l.substr(-5)&&\"hsla(\"!==l.substr(-5)||(b=1),v!==(_=i[u++]||\"\")&&(s=parseFloat(_)||0,d=_.substr((s+\"\").length),(m=\"=\"===v.charAt(1)?+(v.charAt(0)+\"1\"):0)&&(v=v.substr(2)),Z=parseFloat(v),c=v.substr((Z+\"\").length),g=Ia.lastIndex-c.length,c||(c=c||U.units[t]||d,g===e.length&&(e+=c,f.e+=c)),d!==c&&(s=za(r,t,_,c)||0),f._pt={_next:f._pt,p:l||1===u?l:\",\",s:s,c:m?m*Z:Z-s,m:b&&b<4||\"zIndex\"===t?Math.round:0});f.c=g<e.length?e.substring(g,e.length):\"\"}else f.r=\"display\"===t&&\"none\"===e?Sc:Rc;return ac.test(e)&&(f.e=0),this._pt=f,f},Yc={top:\"0%\",bottom:\"100%\",left:\"0%\",right:\"100%\",center:\"50%\"},oe=function(r){var t=r.split(\" \"),$=t[0],e=t[1]||\"50%\";return\"top\"!==$&&\"bottom\"!==$&&\"left\"!==e&&\"right\"!==e||(r=$,$=e,e=r),t[0]=Yc[$]||$,t[1]=Yc[e]||e,t.join(\" \")},pe=function(r,t){if(t.tween&&t.tween._time===t.tween._dur){var $,e,p,a=t.t,n=a.style,o=t.u,i=a._gsap;if(\"all\"===o||!0===o)n.cssText=\"\",e=1;else for(p=(o=o.split(\",\")).length;--p>-1;)$=o[p],wa[$]&&(e=1,$=\"transformOrigin\"===$?Ea:ha),ob(a,$);e&&(ob(a,ha),i&&(i.svg&&a.removeAttribute(\"transform\"),qb(a,1),i.uncache=1))}},pb={clearProps:function(r,t,$,e,p){if(\"isFromStart\"!==p.data){var a=r._pt=new X(r._pt,t,$,0,0,pe);return a.u=e,a.pr=-10,a.tween=p,r._props.push($),1}}},bb=[1,0,0,1,0,0],Zc={},$c=function(r){return\"matrix(1, 0, 0, 1, 0, 0)\"===r||\"none\"===r||!r},_c=function(r){var t=ra(r,ha);return $c(t)?bb:t.substr(7).match(_b).map(j)},Qb=function(r,t){var $,e,p,a,n=r._gsap||Aa(r),o=r.style,i=_c(r);return n.svg&&r.getAttribute(\"transform\")?\"1,0,0,1,0,0\"===(i=[(p=r.transform.baseVal.consolidate().matrix).a,p.b,p.c,p.d,p.e,p.f]).join(\",\")?bb:i:(i!==bb||r.offsetParent||r===ab||n.svg||(p=o.display,o.display=\"block\",($=r.parentNode)&&r.offsetParent||(a=1,e=r.nextSibling,ab.appendChild(r)),i=_c(r),p?o.display=p:ob(r,\"display\"),a&&(e?$.insertBefore(r,e):$?$.appendChild(r):ab.removeChild(r))),t&&i.length>6?[i[0],i[1],i[4],i[5],i[12],i[13]]:i)},Rb=function(r,t,$,e,p,a){var n,o,i,s=r._gsap,b=p||Qb(r,!0),_=s.xOrigin||0,v=s.yOrigin||0,Z=s.xOffset||0,l=s.yOffset||0,c=b[0],d=b[1],m=b[2],f=b[3],g=b[4],u=b[5],h=t.split(\" \"),x=parseFloat(h[0])||0,P=parseFloat(h[1])||0;$?b!==bb&&(o=c*f-d*m)&&(i=x*(-d/o)+P*(c/o)-(c*u-d*g)/o,x=x*(f/o)+P*(-m/o)+(m*u-f*g)/o,P=i):(x=(n=Vc(r)).x+(~h[0].indexOf(\"%\")?x/100*n.width:x),P=n.y+(~(h[1]||h[0]).indexOf(\"%\")?P/100*n.height:P)),e||!1!==e&&s.smooth?(g=x-_,u=P-v,s.xOffset=Z+(g*c+u*m)-g,s.yOffset=l+(g*d+u*f)-u):s.xOffset=s.yOffset=0,s.xOrigin=x,s.yOrigin=P,s.smooth=!!e,s.origin=t,s.originIsAbsolute=!!$,r.style[Ea]=\"0px 0px\",a&&(ya(a,s,\"xOrigin\",_,x),ya(a,s,\"yOrigin\",v,P),ya(a,s,\"xOffset\",Z,s.xOffset),ya(a,s,\"yOffset\",l,s.yOffset)),r.setAttribute(\"data-svg-origin\",x+\" \"+P)},qb=function(r,t){var $=r._gsap||new Gc(r);if(\"x\"in $&&!t&&!$.uncache)return $;var e,p,a,n,o,i,s,b,_,v,Z,l,c,d,m,f,g,u,h,x,P,y,w,T,S,O,C,D,E,A,M,B,k=r.style,N=$.scaleX<0,z=ra(r,Ea)||\"0\";return e=p=a=i=s=b=_=v=Z=0,n=o=1,$.svg=!(!r.getCTM||!Wc(r)),d=Qb(r,$.svg),$.svg&&(T=!$.uncache&&r.getAttribute(\"data-svg-origin\"),Rb(r,T||z,!!T||$.originIsAbsolute,!1!==$.smooth,d)),l=$.xOrigin||0,c=$.yOrigin||0,d!==bb&&(u=d[0],h=d[1],x=d[2],P=d[3],e=y=d[4],p=w=d[5],6===d.length?(n=Math.sqrt(u*u+h*h),o=Math.sqrt(P*P+x*x),i=u||h?Ra(h,u)*Da:0,(_=x||P?Ra(x,P)*Da+i:0)&&(o*=Math.cos(_*Qa)),$.svg&&(e-=l-(l*u+c*x),p-=c-(l*h+c*P))):(B=d[6],A=d[7],C=d[8],D=d[9],E=d[10],M=d[11],e=d[12],p=d[13],a=d[14],s=(m=Ra(B,E))*Da,m&&(T=y*(f=Math.cos(-m))+C*(g=Math.sin(-m)),S=w*f+D*g,O=B*f+E*g,C=y*-g+C*f,D=w*-g+D*f,E=B*-g+E*f,M=A*-g+M*f,y=T,w=S,B=O),b=(m=Ra(-x,E))*Da,m&&(f=Math.cos(-m),M=P*(g=Math.sin(-m))+M*f,u=T=u*f-C*g,h=S=h*f-D*g,x=O=x*f-E*g),i=(m=Ra(h,u))*Da,m&&(T=u*(f=Math.cos(m))+h*(g=Math.sin(m)),S=y*f+w*g,h=h*f-u*g,w=w*f-y*g,u=T,y=S),s&&Math.abs(s)+Math.abs(i)>359.9&&(s=i=0,b=180-b),n=j(Math.sqrt(u*u+h*h+x*x)),o=j(Math.sqrt(w*w+B*B)),m=Ra(y,w),_=Math.abs(m)>2e-4?m*Da:0,Z=M?1/(M<0?-M:M):0),$.svg&&(T=r.getAttribute(\"transform\"),$.forceCSS=r.setAttribute(\"transform\",\"\")||!$c(ra(r,ha)),T&&r.setAttribute(\"transform\",T))),Math.abs(_)>90&&Math.abs(_)<270&&(N?(n*=-1,_+=i<=0?180:-180,i+=i<=0?180:-180):(o*=-1,_+=_<=0?180:-180)),$.x=e-(($.xPercent=e&&($.xPercent||(Math.round(r.offsetWidth/2)===Math.round(-e)?-50:0)))?r.offsetWidth*$.xPercent/100:0)+\"px\",$.y=p-(($.yPercent=p&&($.yPercent||(Math.round(r.offsetHeight/2)===Math.round(-p)?-50:0)))?r.offsetHeight*$.yPercent/100:0)+\"px\",$.z=a+\"px\",$.scaleX=j(n),$.scaleY=j(o),$.rotation=j(i)+\"deg\",$.rotationX=j(s)+\"deg\",$.rotationY=j(b)+\"deg\",$.skewX=_+\"deg\",$.skewY=v+\"deg\",$.transformPerspective=Z+\"px\",($.zOrigin=parseFloat(z.split(\" \")[2])||0)&&(k[Ea]=rb(z)),$.xOffset=$.yOffset=0,$.force3D=U.force3D,$.renderTransform=$.svg?re:ae?ad:qe,$.uncache=0,$},rb=function(r){return(r=r.split(\" \"))[0]+\" \"+r[1]},Sb=function(r,t,$){var e=ca(t);return j(parseFloat(t)+parseFloat(za(r,\"x\",$+\"px\",e)))+e},qe=function(r,t){t.z=\"0px\",t.rotationY=t.rotationX=\"0deg\",t.force3D=0,ad(r,t)},Fa=\"0deg\",cb=\"0px\",Ga=\") \",ad=function(r,t){var $=t||this,e=$.xPercent,p=$.yPercent,a=$.x,n=$.y,o=$.z,i=$.rotation,s=$.rotationY,b=$.rotationX,_=$.skewX,v=$.skewY,Z=$.scaleX,l=$.scaleY,c=$.transformPerspective,d=$.force3D,m=$.target,f=$.zOrigin,g=\"\",u=\"auto\"===d&&r&&1!==r||!0===d;if(f&&(b!==Fa||s!==Fa)){var h,x=parseFloat(s)*Qa,P=Math.sin(x),y=Math.cos(x);x=parseFloat(b)*Qa,h=Math.cos(x),a=Sb(m,a,P*h*-f),n=Sb(m,n,-Math.sin(x)*-f),o=Sb(m,o,y*h*-f+f)}c!==cb&&(g+=\"perspective(\"+c+Ga),(e||p)&&(g+=\"translate(\"+e+\"%, \"+p+\"%) \"),(u||a!==cb||n!==cb||o!==cb)&&(g+=o!==cb||u?\"translate3d(\"+a+\", \"+n+\", \"+o+\") \":\"translate(\"+a+\", \"+n+Ga),i!==Fa&&(g+=\"rotate(\"+i+Ga),s!==Fa&&(g+=\"rotateY(\"+s+Ga),b!==Fa&&(g+=\"rotateX(\"+b+Ga),_===Fa&&v===Fa||(g+=\"skew(\"+_+\", \"+v+Ga),1===Z&&1===l||(g+=\"scale(\"+Z+\", \"+l+Ga),m.style[ha]=g||\"translate(0, 0)\"},re=function(r,t){var $,e,p,a,n,o=t||this,i=o.xPercent,s=o.yPercent,b=o.x,_=o.y,v=o.rotation,Z=o.skewX,l=o.skewY,c=o.scaleX,d=o.scaleY,m=o.target,f=o.xOrigin,g=o.yOrigin,u=o.xOffset,h=o.yOffset,x=o.forceCSS,P=parseFloat(b),y=parseFloat(_);v=parseFloat(v),Z=parseFloat(Z),(l=parseFloat(l))&&(Z+=l=parseFloat(l),v+=l),v||Z?(v*=Qa,Z*=Qa,$=Math.cos(v)*c,e=Math.sin(v)*c,p=Math.sin(v-Z)*-d,a=Math.cos(v-Z)*d,Z&&(l*=Qa,n=Math.tan(Z-l),p*=n=Math.sqrt(1+n*n),a*=n,l&&(n=Math.tan(l),$*=n=Math.sqrt(1+n*n),e*=n)),$=j($),e=j(e),p=j(p),a=j(a)):($=c,a=d,e=p=0),(P&&!~(b+\"\").indexOf(\"px\")||y&&!~(_+\"\").indexOf(\"px\"))&&(P=za(m,\"x\",b,\"px\"),y=za(m,\"y\",_,\"px\")),(f||g||u||h)&&(P=j(P+f-(f*$+g*p)+u),y=j(y+g-(f*e+g*a)+h)),(i||s)&&(n=m.getBBox(),P=j(P+i/100*n.width),y=j(y+s/100*n.height)),n=\"matrix(\"+$+\",\"+e+\",\"+p+\",\"+a+\",\"+P+\",\"+y+\")\",m.setAttribute(\"transform\",n),x&&(m.style[ha]=n)},se=function(r,t,$,e,p,a){var n,o,i=Q(p),s=parseFloat(p)*(i&&~p.indexOf(\"rad\")?Da:1),b=a?s*a:s-e,_=e+b+\"deg\";return i&&(\"short\"===(n=p.split(\"_\")[1])&&(b%=360)!==b%180&&(b+=b<0?360:-360),\"cw\"===n&&b<0?b=(b+360*Oc)%360-360*~~(b/360):\"ccw\"===n&&b>0&&(b=(b-360*Oc)%360-360*~~(b/360))),r._pt=o=new X(r._pt,t,$,e,b,ee),o.e=_,o.u=\"deg\",r._props.push($),o},te=function(r,t,$){var e,p,a,n,o,i,s,b=nb.style,_=$._gsap;for(p in b.cssText=getComputedStyle($).cssText+\";position:absolute;display:block;\",b[ha]=t,qa.body.appendChild(nb),e=qb(nb,1),wa)(a=_[p])!==(n=e[p])&&\"perspective,force3D,transformOrigin,svgOrigin\".indexOf(p)<0&&(o=ca(a)!==(s=ca(n))?za($,p,a,s):parseFloat(a),i=parseFloat(n),r._pt=new X(r._pt,_,p,o,i-o,Qc),r._pt.u=s||0,r._props.push(p));qa.body.removeChild(nb)};ba(\"padding,margin,Width,Radius\",function(r,t){var $=\"Top\",e=\"Right\",p=\"Bottom\",a=\"Left\",n=(t<3?[$,e,p,a]:[$+a,$+e,p+e,p+a]).map(function($){return t<2?r+$:\"border\"+$+r});pb[t>1?\"border\"+r:r]=function(r,t,$,e,p){var a,o;if(arguments.length<4)return a=n.map(function(t){return Ta(r,t,$)}),5===(o=a.join(\" \")).split(a[0]).length?a[0]:o;a=(e+\"\").split(\" \"),o={},n.forEach(function(r,t){return o[r]=a[t]=a[t]||a[(t-1)/2|0]}),r.init(t,o,p)}});var bd={name:\"css\",register:Ob,targetTest:function(r){return r.style&&r.nodeType},init:function(r,t,$,e,p){var a,n,o,i,s,b,_,v,Z,l,c,d,m,f,g,u=this._props,h=r.style,x=$.vars.startAt;for(_ in Nc||Ob(),t)if(\"autoRound\"!==_&&(n=t[_],!aa[_]||!Hc(_,t,$,e,r,p)))if(s=typeof n,b=pb[_],\"function\"===s&&(s=typeof(n=n.call($,e,r,p))),\"string\"===s&&~n.indexOf(\"random(\")&&(n=kb(n)),b)b(this,r,_,n,$)&&(g=1);else if(\"--\"===_.substr(0,2))a=(getComputedStyle(r).getPropertyValue(_)+\"\").trim(),n+=\"\",v=ca(a),(Z=ca(n))?v!==Z&&(a=za(r,_,a,Z)+Z):v&&(n+=v),this.add(h,\"setProperty\",a,n,e,p,0,0,_);else if(\"undefined\"!==s){if(x&&_ in x?(a=\"function\"==typeof x[_]?x[_].call($,e,r,p):x[_],_ in U.units&&!ca(a)&&(a+=U.units[_]),\"=\"===(a+\"\").charAt(1)&&(a=Ta(r,_))):a=Ta(r,_),i=parseFloat(a),(l=\"string\"===s&&\"=\"===n.charAt(1)?+(n.charAt(0)+\"1\"):0)&&(n=n.substr(2)),o=parseFloat(n),_ in xa&&(\"autoAlpha\"===_&&(1===i&&\"hidden\"===Ta(r,\"visibility\")&&o&&(i=0),ya(this,h,\"visibility\",i?\"inherit\":\"hidden\",o?\"inherit\":\"hidden\",!o)),\"scale\"!==_&&\"transform\"!==_&&~(_=xa[_]).indexOf(\",\")&&(_=_.split(\",\")[0])),c=_ in wa){if(d||((m=r._gsap).renderTransform&&!t.parseTransform||qb(r,t.parseTransform),f=!1!==t.smoothOrigin&&m.smooth,(d=this._pt=new X(this._pt,h,ha,0,1,m.renderTransform,m,0,-1)).dep=1),\"scale\"===_)this._pt=new X(this._pt,m,\"scaleY\",m.scaleY,l?l*o:o-m.scaleY),u.push(\"scaleY\",_),_+=\"X\";else{if(\"transformOrigin\"===_){n=oe(n),m.svg?Rb(r,n,0,f,0,this):((Z=parseFloat(n.split(\" \")[2])||0)!==m.zOrigin&&ya(this,m,\"zOrigin\",m.zOrigin,Z),ya(this,h,_,rb(a),rb(n)));continue}if(\"svgOrigin\"===_){Rb(r,n,1,f,0,this);continue}if(_ in Zc){se(this,m,_,i,n,l);continue}if(\"smoothOrigin\"===_){ya(this,m,\"smooth\",m.smooth,n);continue}if(\"force3D\"===_){m[_]=n;continue}if(\"transform\"===_){te(this,n,r);continue}}}else _ in h||(_=Sa(_)||_);if(c||(o||0===o)&&(i||0===i)&&!de.test(n)&&_ in h)o||(o=0),(v=(a+\"\").substr((i+\"\").length))!==(Z=ca(n)||(_ in U.units?U.units[_]:v))&&(i=za(r,_,a,Z)),this._pt=new X(this._pt,c?m:h,_,i,l?l*o:o-i,c||\"px\"!==Z&&\"zIndex\"!==_||!1===t.autoRound?Qc:ge),this._pt.u=Z||0,v!==Z&&(this._pt.b=a,this._pt.r=fe);else if(_ in h)ne.call(this,r,_,a,n);else{if(!(_ in r)){xb(_,n);continue}this.add(r,_,r[_],n,e,p)}u.push(_)}g&&Mc(this)},get:Ta,aliases:xa,getSetter:function(r,t,$){var e=xa[t];return e&&e.indexOf(\",\")<0&&(t=e),t in wa&&t!==Ea&&(r._gsap.x||Ta(r,\"x\"))?$&&_d===$?\"scale\"===t?ke:je:(_d=$||{})&&(\"scale\"===t?le:me):r.style&&!tb(r.style[t])?he:~t.indexOf(\"-\")?ie:Kb(r,t)},core:{_removeProperty:ob,_getMatrix:Qb}};la.utils.checkPrefix=Sa,function(r,t,$,e){var p=ba(\"x,y,z,scale,scaleX,scaleY,xPercent,yPercent,\"+t+\",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective\",function(r){wa[r]=1});ba(t,function(r){U.units[r]=\"deg\",Zc[r]=1}),xa[p[13]]=\"x,y,z,scale,scaleX,scaleY,xPercent,yPercent,\"+t,ba(\"0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY\",function(r){var t=r.split(\":\");xa[t[1]]=p[t[0]]})}(0,\"rotation,rotationX,rotationY,skewX,skewY\"),ba(\"x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective\",function(r){U.units[r]=\"px\"}),la.registerPlugin(bd);var I=la.registerPlugin(bd)||la,ue=I.core.Tween;var ve=function(){function t(t){this.pointerElement=t,this.defaultStyle={width:20,height:20,radius:100}}return t.prototype.onUpdate=function(t,i){I.to(this.pointerElement,{x:t-this.defaultStyle.width/2,y:i-this.defaultStyle.height/2,duration:.05})},t.prototype.init=function(){I.to(this.pointerElement,{width:this.defaultStyle.width,height:this.defaultStyle.height,borderRadius:this.defaultStyle.radius,duration:.15})},t}();var we=function(){function t(t,e){var i=this;this.changePointerOnDown=function(){I.to(i.pointerElement,{background:\"rgba(0,0,0,0.5)\",scale:.92})},this.resetPointer=function(){I.to(i.pointerElement,{background:i.pointerBackground,scale:1,onComplete:function(){ue.set(i.pointerElement,{clearProps:\"background\"})}})},this.pointerElement=t,this.targetElement=e,this.horizontalGridPosition=[],this.lineHeight=0,this.initEventListener()}return t.prototype.onUpdate=function(t,e){var i=this.pointerElement.offsetWidth,n=Math.max.apply(Math,this.horizontalGridPosition.filter(function(t){return e>t})),o=t-i/2,r=Math.min.apply(Math,this.horizontalGridPosition),s=Math.max.apply(Math,this.horizontalGridPosition),h=n+(e>n+this.lineHeight-this.lineHeight/4?this.lineHeight/4:e<n+this.lineHeight/4?-this.lineHeight/4:0);e>=r&&e<=s&&n>0?I.to(this.pointerElement,{x:o,y:h,duration:.15}):I.to(this.pointerElement,{x:t-i/2,y:e-this.lineHeight/2,duration:.15})},t.prototype.init=function(){var t=this.targetElement.getBoundingClientRect(),e=t.top,i=t.height,n=window.getComputedStyle(this.targetElement),o=window.getComputedStyle(this.pointerElement),r=parseInt(n.lineHeight,10)||16,s=parseFloat(n.paddingTop),h=parseFloat(n.paddingBottom);this.horizontalGridPosition=Array.from({length:Math.round((i-h-s)/r)}).map(function(t,i){return e+s+r+i*r}),this.horizontalGridPosition.push(e+s),this.lineHeight=r,this.pointerBackground=o.backgroundColor,I.to(this.pointerElement,{width:this.lineHeight/10,height:this.lineHeight,borderRadius:10,duration:.15})},t.prototype.initEventListener=function(){this.targetElement.addEventListener(\"mousedown\",this.changePointerOnDown),this.targetElement.addEventListener(\"mouseup\",this.resetPointer)},t.prototype.removeEventListener=function(){this.targetElement.removeEventListener(\"mousedown\",this.changePointerOnDown),this.targetElement.removeEventListener(\"mouseup\",this.resetPointer)},t.prototype.onReset=function(){this.removeEventListener(),this.resetPointer()},t}();var cd=function(){function e(){this.specularLayer=null}return e.prototype.init=function(){var e=document.createElement(\"div\");Object.assign(e.style,{position:\"fixed\",pointerEvents:\"none\",top:0,left:0,width:0,height:0,borderRadius:0,zIndex:99999999}),this.specularLayer=e,document.body.appendChild(this.specularLayer)},e.prototype.destroy=function(){this.specularLayer.parentElement.removeChild(this.specularLayer)},e.prototype.update=function(e){e(this.specularLayer)},e}();var xe=function(){function t(t,e){this.specularLayer=new cd,this.highlightStyle=null,this.cssHighlightClass=\"pointer-highlight-type\",this.pointerElement=t,this.targetElement=e}return t.prototype.onUpdate=function(t,e){var i=this.targetElementValues,r=i.top,s=i.left,h=i.width,a=i.height,n=s-(s-t+h/2)/6,l=r-(r-e+a/2)/8;I.to(this.pointerElement,{x:n,y:l,duration:.15}),this.specularLayer.update(function(i){I.to(i,{x:n,y:l,duration:.15,backgroundImage:\"radial-gradient(circle at \"+Math.abs(s-t)+\"px \"+Math.abs(r-e)+\"px, rgba(255, 255, 255, 0.32) 0%, rgba(255, 255, 255, 0) 60%)\"})}),I.to(this.targetElement,{x:-(s-t+h/2)/18,y:-(r-e+a/2)/20,duration:.15})},t.prototype.init=function(){var t=this.targetElement.getBoundingClientRect(),e=t.width,i=t.height,r=t.top,s=t.left,h=parseFloat(window.getComputedStyle(this.targetElement).borderRadius),a=parseFloat(window.getComputedStyle(this.targetElement).zIndex);this.targetElementValues={top:r,left:s,width:e,height:i,zIndex:a},this.specularLayer.init(),this.createHighlighStyle(),this.pointerElement.classList.add(this.cssHighlightClass),I.to(this.pointerElement,{y:r,x:s,width:e,height:i,borderRadius:h,duration:.15}),this.specularLayer.update(function(t){I.to(t,{y:r,x:s,width:e,height:i,borderRadius:h,duration:.15})})},t.prototype.onReset=function(){this.specularLayer.destroy(),this.removeHighlighStyle(),this.pointerElement.classList.remove(this.cssHighlightClass),I.to(this.targetElement,{x:0,y:0,duration:.15})},t.prototype.removeHighlighStyle=function(){this.highlightStyle.parentElement.removeChild(this.highlightStyle)},t.prototype.createHighlighStyle=function(){var t=document.createElement(\"style\");t.innerHTML=\"\\n            .\"+this.cssHighlightClass+\" {\\n                z-index: \"+(this.targetElementValues.zIndex-1)+\";\\n                background-color: rgba(0,0,0,0.07);\\n            }\\n        \",this.highlightStyle=t,document.head.appendChild(this.highlightStyle)},t}();var ye=function(){function t(t,e){this.specularLayer=new cd,this.cssLiftClass=\"pointer-lift-type\",this.liftStyle=null,this.pointerElement=t,this.targetElement=e}return t.prototype.init=function(){var t=this.targetElement.getBoundingClientRect(),e=t.width,i=t.height,r=t.top,a=t.left,o=window.getComputedStyle(this.targetElement),s=parseFloat(o.borderRadius),n=parseFloat(o.zIndex),l=o.backgroundColor;this.targetElementValues={top:r,left:a,width:e,height:i,zIndex:n},this.addLiftStyle(),this.specularLayer.init(),this.pointerElement.classList.add(this.cssLiftClass),I.to(this.pointerElement,{y:r-.075*i,x:a-.075*e,width:1.15*e,height:1.15*i,borderRadius:s,duration:.15,filter:\"drop-shadow(0 -3px 12px \"+l+\") drop-shadow(0 3px 6px black)\"}),this.specularLayer.update(function(t){I.to(t,{y:r-.075*i,x:a-.075*e,width:1.15*e,height:1.15*i,borderRadius:s,duration:.15})}),I.to(this.targetElement,{scale:1.15,duration:.15})},t.prototype.onUpdate=function(t,e){var i=this.targetElementValues,r=i.top,a=i.left,o=i.width,s=i.height,n=-(a-.075*o-t+1.15*o/2)/10,l=-(r-.075*s-e+1.15*s/2)/12,p=a-.075*o+n,h=r-.075*s+l;I.to(this.pointerElement,{x:p,y:h,duration:.15}),this.specularLayer.update(function(i){I.to(i,{x:p,y:h,duration:.15,backgroundImage:\"radial-gradient(circle at \"+Math.abs(a-t)+\"px \"+Math.abs(r-e)+\"px, rgba(255, 255, 255, 0.32) 0%, rgba(255, 255, 255, 0) 60%)\"})}),I.to(this.targetElement,{x:n,y:l,duration:.15})},t.prototype.onReset=function(){this.removeLiftStyle(),this.specularLayer.destroy(),this.pointerElement.classList.remove(this.cssLiftClass),I.to(this.pointerElement,{duration:.15,filter:\"none\"}),I.to(this.targetElement,{scale:1,x:0,y:0,duration:.15})},t.prototype.removeLiftStyle=function(){this.liftStyle.parentElement.removeChild(this.liftStyle)},t.prototype.addLiftStyle=function(){var t=document.createElement(\"style\");t.innerHTML=\"\\n            .\"+this.cssLiftClass+\" {\\n                background-color: rgba(0,0,0,0.05);\\n                z-index: \"+(this.targetElementValues.zIndex-1)+\";\\n            }\\n        \",this.liftStyle=t,document.head.appendChild(this.liftStyle)},t}();var sa=new Map;function ze(e,t){sa.has(e)?console.warn(\"MorphingPointer: could not add custom pointer with type \"+e+\", try to change custom pointer type\"):sa.set(e,t)}function dd(e){return sa.has(e)?sa.get(e):(console.warn(\"MorphingPointer: could not get pointer with type \"+e+\", try to change pointer type\"),sa.get(\"default\"))}sa.set(\"default\",ve),sa.set(\"content\",we),sa.set(\"highlight\",xe),sa.set(\"lift\",ye);function Ae(){if(document.querySelector(\".iPad-like-pointer\"))return console.warn(\"MorphingPointer: pointer element has already created\"),document.querySelector(\".iPad-like-pointer\");var e=document.createElement(\"div\"),n=document.createElement(\"style\");return e.classList.add(\"iPad-like-pointer\"),n.innerText=\"\\n        body, [data-pointer-type] {\\n             cursor: none;\\n        }\\n\\n        .iPad-like-pointer {\\n            position: fixed;\\n            pointer-events: none;\\n            top: 0;\\n            left: 0;\\n            width: 20px;\\n            height: 20px;\\n            border-radius: 100px;\\n            background-color: rgba(0,0,0,0.23);\\n            z-index: 99999999;\\n            transition: background-color 150ms ease;\\n        }\\n    \",document.head.appendChild(n),document.body.appendChild(e),e}var Be=function(){function t(){this.pointerElement=Ae(),this.setDefaultPointer(),this.pointerPosition={x:0,y:0}}return t.prototype.init=function(){this.initEventListeners(),this.initPointerPositionUpdates()},t.prototype.setSelectedPointer=function(t,e){var i=dd(t);this.pointer=new i(this.pointerElement,e),this.pointer.init()},t.prototype.setDefaultPointer=function(){var t=dd(\"default\");this.pointer=new t(this.pointerElement),this.pointer.init()},t.prototype.updatePointerPosition=function(t,e){this.pointer.onUpdate(t,e)},t.prototype.initPointerPositionUpdates=function(){var t=this;requestAnimationFrame(function e(){var i=t.pointerPosition,n=i.x,o=i.y;t.updatePointerPosition(n,o),requestAnimationFrame(e)})},t.prototype.initEventListeners=function(){var t=this;Array.from(document.querySelectorAll(\"[data-pointer-type]\")).forEach(function(e){e.addEventListener(\"mouseenter\",function(e){var i=e.currentTarget,n=i.dataset.pointerType;t.setSelectedPointer(n,i)}),e.addEventListener(\"mouseleave\",function(){t.pointer.onReset(),t.setDefaultPointer()})}),window.addEventListener(\"mousemove\",function(e){t.pointerPosition.x=e.clientX,t.pointerPosition.y=e.clientY})},t}();db.addPointer=ze,db.initMorphingPointer=ed;if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=db}else if(typeof define===\"function\"&&define.amd){define(function(){return db})}})();","'use strict';\r\n\r\nmodule.exports = function(timestamp) {\r\n\tvar wasWindowIdled = timestamp - this.previousTimeStamp > 100;\r\n\tvar isLoop = this.states[this.activeState].loop !== undefined ? this.states[this.activeState].loop : true;\r\n\tvar progressPercent, isLooping, nextGradient;\r\n\r\n\t// If tab was inactive then resumed, reset the previous timestamp\r\n\tif (this.previousTimeStamp === null || wasWindowIdled) {\r\n\t\tthis.previousTimeStamp = timestamp;\r\n\t}\r\n\r\n\t// Compute progress and save the timestamp\r\n\tthis.progress = this.progress + (timestamp - this.previousTimeStamp);\r\n\tprogressPercent = (this.progress / this.activetransitionSpeed * 100).toFixed(2);\r\n\tthis.previousTimeStamp = timestamp;\r\n\r\n\t// Set the new gradient colors in a property\r\n\tthis.refreshColorsAndPos(progressPercent);\r\n\r\n\t// Continue the animation or prepare for the next one\r\n\tif (progressPercent < 100) {\r\n\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\r\n\t} else {\r\n\t\t// if the current animation index is inferior to the penultimate gradient\r\n\t\t// or to the last gradient with the loop mode activated\r\n\t\tif (this.channelsIndex < this.states[this.activeState].gradients.length - 2 || isLoop) {\r\n\r\n\t\t\t// Set the active transition speed to the active state one after changing state\r\n\t\t\tif (this.isChangingState) {\r\n\t\t\t\tthis.activetransitionSpeed = this.states[this.activeState].transitionSpeed || 5000;\r\n\t\t\t\tthis.isChangingState = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Resetting properties\r\n\t\t\tthis.previousTimeStamp = null;\r\n\t\t\tthis.progress = 0;\r\n\t\t\tthis.channelsIndex++;\r\n\t\t\tisLooping = false;\r\n\r\n\t\t\t// If it's going to loop or if it's the transition after the loop\r\n\t\t\tif (this.channelsIndex === this.states[this.activeState].gradients.length - 1) {\r\n\t\t\t\tisLooping = true;\r\n\t\t\t\t\r\n\t\t\t} else if (this.channelsIndex === this.states[this.activeState].gradients.length) {\r\n\t\t\t\tthis.channelsIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Checking the next gradient to send in args of an event and a callback\r\n\t\t\tnextGradient = this.states[this.activeState].gradients[this.channelsIndex + 1] === undefined ?\r\n\t\t\t\tthis.states[this.activeState].gradients[0] :\r\n\t\t\t\tthis.states[this.activeState].gradients[this.channelsIndex + 1];\r\n\r\n\t\t\t// Compute the colors for the transition and render a new frame\r\n\t\t\tthis.setColors();\r\n\t\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\t\t\r\n\t\t\t// Callback and Event\r\n\t\t\tif (this.callbacks.onGradientChange) {\r\n\t\t\t\tthis.callbacks.onGradientChange({\r\n\t\t\t\t\tisLooping: isLooping,\r\n\t\t\t\t\tcolorsFrom: this.states[this.activeState].gradients[this.channelsIndex],\r\n\t\t\t\t\tcolorsTo: nextGradient,\r\n\t\t\t\t\tactiveState: this.activeState\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.canvas.dispatchEvent(this.events.gradientChange({\r\n\t\t\t\tisLooping: isLooping,\r\n\t\t\t\tcolorsFrom: this.states[this.activeState].gradients[this.channelsIndex],\r\n\t\t\t\tcolorsTo: nextGradient,\r\n\t\t\t\tactiveState: this.activeState\r\n\t\t\t}));\r\n\r\n\t\t// Else if it was the last gradient on the list and the loop mode is off\r\n\t\t} else {\r\n\t\t\tcancelAnimationFrame(this.animation);\r\n\r\n\t\t\t// Callback and Event\r\n\t\t\tif (this.callbacks.onEnd) this.callbacks.onEnd();\r\n\t\t\tthis.canvas.dispatchEvent(new CustomEvent('granim:end'));\r\n\t\t}\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newBlendingMode) {\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\tthis.context.globalCompositeOperation =\r\n\t\tthis.image.blendingMode = newBlendingMode;\r\n\tthis.validateInput('blendingMode');\r\n\tif (this.isPaused) this.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newDirection) {\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\tthis.direction = newDirection;\r\n\tthis.validateInput('direction');\r\n\tif (this.isPaused) this.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newState) {\r\n\tvar _this = this;\r\n\r\n\t// Prevent transitioning to the same state\r\n\tif (this.activeState === newState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Setting the good properties for the transition\r\n\tif (!this.isPaused) {\r\n\t\tthis.isPaused = true;\r\n\t\tthis.pause();\r\n\t}\r\n\r\n\tthis.channelsIndex = -1;\r\n\tthis.activetransitionSpeed = this.stateTransitionSpeed;\r\n\tthis.activeColorsDiff = [];\r\n\tthis.activeColorsPosDiff = [];\r\n\tthis.activeColors = this.getCurrentColors();\r\n\tthis.activeColorsPos = this.getCurrentColorsPos();\r\n\tthis.progress = 0;\r\n\tthis.previousTimeStamp = null;\r\n\tthis.isChangingState = true;\r\n\r\n\t// Compute the gradient color and pos diff between the last frame gradient\r\n\t// and the first one of the new state\r\n\tthis.states[newState].gradients[0].forEach(function(gradientColor, i, arr) {\r\n\t\tvar nextColors = _this.convertColorToRgba(_this.getColor(gradientColor));\r\n\t\tvar nextColorsPos = _this.getColorPos(gradientColor, i);\r\n\t\tvar colorDiff = _this.getColorDiff(_this.activeColors[i], nextColors);\r\n\t\tvar colorPosDiff = _this.getColorPosDiff(_this.activeColorsPos[i], nextColorsPos);\r\n\t\t_this.activeColorsDiff.push(colorDiff);\r\n\t\t_this.activeColorsPosDiff.push(colorPosDiff);\r\n\t});\r\n\r\n\t// Start the animation\r\n\tthis.activeState = newState;\r\n\tthis.play();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tif (!this.isPaused) {\r\n\t\tcancelAnimationFrame(this.animation);\r\n\r\n\t} else {\r\n\t\tthis.isPaused = false;\r\n\t}\r\n\tthis.isCleared = true;\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n};\r\n","'use strict';\r\n\r\nvar regex = {\r\n\thexa: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\r\n\trgba: /^rgba\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3}), ?(.?\\d{1,3})\\)$/,\r\n\trgb: /^rgb\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)$/,\r\n\thsla: /^hsla\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%, ?(.?\\d{1,3})\\)$/,\r\n\thsl: /^hsl\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%\\)$/\r\n}, match;\r\n\r\nmodule.exports = function(color) {\r\n\tswitch(identifyColorType(color)) {\r\n\t\tdefault:\r\n\t\t\tthis.triggerError('colorType');\r\n\r\n\t\tcase 'hexa':\r\n\t\t\treturn hexToRgba(color);\r\n\r\n\t\tcase 'rgba':\r\n\t\t\treturn [\r\n\t\t\t\tparseInt(match[1], 10),\r\n\t\t\t\tparseInt(match[2], 10),\r\n\t\t\t\tparseInt(match[3], 10),\r\n\t\t\t\tparseFloat(match[4])\r\n\t\t\t];\r\n\r\n\t\tcase 'rgb':\r\n\t\t\treturn [\r\n\t\t\t\tparseInt(match[1], 10),\r\n\t\t\t\tparseInt(match[2], 10),\r\n\t\t\t\tparseInt(match[3], 10),\r\n\t\t\t\t1\r\n\t\t\t];\r\n\r\n\t\tcase 'hsla':\r\n\t\t\treturn hslaToRgb(\r\n\t\t\t\tparseInt(match[1], 10) / 360,\r\n\t\t\t\tparseInt(match[2], 10) / 100,\r\n\t\t\t\tparseInt(match[3], 10) / 100,\r\n\t\t\t\tparseFloat(match[4])\r\n\t\t\t);\r\n\r\n\t\tcase 'hsl':\r\n\t\t\treturn hslaToRgb(\r\n\t\t\t\tparseInt(match[1], 10) / 360,\r\n\t\t\t\tparseInt(match[2], 10) / 100,\r\n\t\t\t\tparseInt(match[3], 10) / 100,\r\n\t\t\t\t1\r\n\t\t\t);\r\n\t}\r\n};\r\n\r\nfunction identifyColorType(color) {\r\n\tvar colorTypes = Object.keys(regex);\r\n\tvar i = 0;\r\n\tfor (i; i < colorTypes.length; i++) {\r\n\t\tmatch = regex[colorTypes[i]].exec(color);\r\n\t\tif (match) return colorTypes[i];\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction hexToRgba(hex) {\r\n\t// Expand shorthand form (e.g. '03F') to full form (e.g. '0033FF')\r\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result ? [\r\n\t\tparseInt(result[1], 16),\r\n\t\tparseInt(result[2], 16),\r\n\t\tparseInt(result[3], 16),\r\n\t\t1\r\n\t] : null;\r\n}\r\n\r\nfunction hue2rgb(p, q, t) {\r\n\tif (t < 0) t += 1;\r\n\tif (t > 1) t -= 1;\r\n\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\tif (t < 1 / 2) return q;\r\n\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\treturn p;\r\n}\r\n\r\nfunction hslaToRgb(h, s, l, a) {\r\n\tvar r, g, b, q, p;\r\n\tif (s === 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tq = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tp = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1/3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1/3);\r\n\t}\r\n\treturn [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a];\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.onResize('removeListeners');\r\n\tthis.onScroll('removeListeners');\r\n\tthis.clear();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tif ( typeof window.CustomEvent === 'function' ) return;\r\n\r\n\tfunction CustomEvent(event, params) {\r\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\r\n\t\tvar evt = document.createEvent('CustomEvent');\r\n\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n\t\treturn evt;\r\n\t}\r\n\r\n\tCustomEvent.prototype = window.Event.prototype;\r\n\r\n\twindow.CustomEvent = CustomEvent;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(gradientColor) {\r\n\tif (typeof gradientColor === 'string') {\r\n\t\treturn gradientColor;\r\n\r\n\t} else if (typeof gradientColor === 'object' && gradientColor.color) {\r\n\t\treturn gradientColor.color;\r\n\r\n\t} else {\r\n\t\tthis.triggerError('gradient.color');\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(colorA, colorB) {\r\n\tvar i = 0;\r\n\tvar colorDiff = [];\r\n\r\n\tfor (i; i < 4; i++) {\r\n\t\tcolorDiff.push(colorB[i] - colorA[i]);\r\n\t}\r\n\r\n\treturn colorDiff;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(gradientColor, i) {\r\n\tif (typeof gradientColor === 'object' && gradientColor.pos) {\r\n\t\treturn gradientColor.pos;\r\n\r\n\t} else {\r\n\t\t// Ensure first and last position to be 0 and 100\r\n\t\treturn parseFloat(!i ? 0 : ((1 / (this.gradientLength - 1)) * i).toFixed(2));\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(posA, posB) {\r\n\treturn posB - posA;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar i, j;\r\n\tvar currentColors = [];\r\n\r\n\tfor (i = 0; i < this.currentColors.length; i++) {\r\n\t\tcurrentColors.push([]);\r\n\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\tcurrentColors[i].push(this.currentColors[i][j]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Return a deep copy of the current colors\r\n\treturn currentColors;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar currentColorsPos = [], i;\r\n\r\n\tfor (i = 0; i < this.currentColorsPos.length; i++) {\r\n\t\tcurrentColorsPos.push(this.currentColorsPos[i]);\r\n\t}\r\n\r\n\t// Return a deep copy of the current colors\r\n\treturn currentColorsPos;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.x1 = this.canvas.offsetWidth;\r\n\tthis.y1 = this.canvas.offsetHeight;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(element) {\r\n\tif (element instanceof HTMLCanvasElement) {\r\n\t\tthis.canvas = element;\r\n\r\n\t} else if (typeof element === 'string') {\r\n\t\tthis.canvas = document.querySelector(element);\r\n\r\n\t} else {\r\n\t\tthrow new Error('The element you used is neither a String, nor a HTMLCanvasElement');\r\n\t}\r\n\r\n\tif (!this.canvas) {\r\n\t\tthrow new Error('`' + element + '` could not be found in the DOM');\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar currentColors = this.getCurrentColors();\r\n\tvar gradientAverage = null;\r\n\tvar lightnessAverage, i;\r\n\tvar colorsAverage = currentColors.map(function(el) {\r\n\t\t// Compute the average lightness of each color\r\n\t\t// in the current gradient\r\n\t\treturn Math.max(el[0], el[1], el[2]);\r\n\t});\r\n\r\n\tfor (i = 0; i < colorsAverage.length; i++) {\r\n\t\t// Add all the average lightness of each color\r\n\t\tgradientAverage = gradientAverage === null ?\r\n\t\t\tcolorsAverage[i] : gradientAverage + colorsAverage[i];\r\n\r\n\t\tif (i === colorsAverage.length - 1) {\r\n\t\t\t// if it's the last lightness average\r\n\t\t\t// divide it by the total length to\r\n\t\t\t// have the global average lightness\r\n\t\t\tlightnessAverage = Math.round(gradientAverage / (i + 1));\r\n\t\t}\r\n\t}\r\n\r\n\treturn lightnessAverage >= 128 ? 'light' : 'dark';\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar gradient = this.setDirection();\r\n\tvar elToSetClassOnClass = document.querySelector(this.elToSetClassOn).classList;\r\n\tvar i = 0;\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\r\n\tif (this.image) {\r\n\t\tthis.context.drawImage(\r\n\t\t\tthis.imageNode,\r\n\t\t\tthis.imagePosition.x,\r\n\t\t\tthis.imagePosition.y,\r\n\t\t\tthis.imagePosition.width,\r\n\t\t\tthis.imagePosition.height\r\n\t\t);\r\n\t}\r\n\r\n\tfor (i; i < this.currentColors.length; i++) {\r\n\t\tgradient.addColorStop(this.currentColorsPos[i], 'rgba(' +\r\n\t\t\tthis.currentColors[i][0] + ', ' +\r\n\t\t\tthis.currentColors[i][1] + ', ' +\r\n\t\t\tthis.currentColors[i][2] + ', ' +\r\n\t\t\tthis.currentColors[i][3] + ')'\r\n\t\t);\r\n\t}\r\n\r\n\tif (this.name) {\r\n\t\tif (this.getLightness() === 'light') {\r\n\t\t\telToSetClassOnClass.remove(this.name + '-dark');\r\n\t\t\telToSetClassOnClass.add(this.name + '-light');\r\n\r\n\t\t} else {\r\n\t\t\telToSetClassOnClass.remove(this.name + '-light');\r\n\t\t\telToSetClassOnClass.add(this.name + '-dark');\r\n\t\t}\r\n\t}\r\n\r\n\tthis.context.fillStyle = gradient;\r\n\tthis.context.fillRect(0, 0, this.x1, this.y1);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(type) {\r\n\tif (type === 'removeListeners') {\r\n\t\twindow.removeEventListener('resize', this.setSizeAttributesNameSpace);\r\n\t\treturn;\r\n\t}\r\n\r\n\twindow.addEventListener('resize', this.setSizeAttributesNameSpace);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(type) {\r\n\tif (type === 'removeListeners') {\r\n\t\twindow.removeEventListener('scroll', this.pauseWhenNotInViewNameSpace);\r\n\t\treturn;\r\n\t}\r\n\r\n\twindow.addEventListener('scroll', this.pauseWhenNotInViewNameSpace);\r\n\tthis.pauseWhenNotInViewNameSpace();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(state) {\r\n\tvar isPausedBecauseNotInView = state === 'isPausedBecauseNotInView';\r\n\tif (this.isCleared) return;\r\n\tif (!isPausedBecauseNotInView) this.isPaused = true;\r\n\tcancelAnimationFrame(this.animation);\r\n\tthis.animating = false;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this;\r\n\tif (this.scrollDebounceTimeout) clearTimeout(this.scrollDebounceTimeout);\r\n\r\n\tthis.scrollDebounceTimeout = setTimeout(function() {\r\n\t\tvar elPos = _this.canvas.getBoundingClientRect();\r\n\t\t_this.isCanvasInWindowView = !(elPos.bottom < 0 || elPos.right < 0 ||\r\n\t\t\telPos.left > window.innerWidth || elPos.top > window.innerHeight);\r\n\r\n\t\tif (_this.isCanvasInWindowView) {\r\n\t\t\tif (!_this.isPaused || _this.firstScrollInit) {\r\n\t\t\t\tif (_this.image && !_this.isImgLoaded) {return;}\r\n\t\t\t\t_this.isPausedBecauseNotInView = false;\r\n\t\t\t\t_this.play('isPlayedBecauseInView');\r\n\t\t\t\t_this.firstScrollInit = false;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (!_this.image && _this.firstScrollInit) {\r\n\t\t\t\t_this.refreshColorsAndPos();\r\n\t\t\t\t_this.firstScrollInit = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!_this.isPaused && !_this.isPausedBecauseNotInView) {\r\n\t\t\t\t_this.isPausedBecauseNotInView = true;\r\n\t\t\t\t_this.pause('isPausedBecauseNotInView');\r\n\t\t\t}\r\n\t\t}\r\n\t}, this.scrollDebounceThreshold);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(state) {\r\n\tvar isPlayedBecauseInView = state === 'isPlayedBecauseInView';\r\n\tif (!isPlayedBecauseInView) this.isPaused = false;\r\n\tthis.isCleared = false;\r\n\tif (!this.animating) {\r\n\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\tthis.animating = true;\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this;\r\n\r\n\tif (!this.imagePosition) {\r\n\t\tthis.imagePosition = { x: 0, y: 0, width: 0, height: 0 };\r\n\t}\r\n\r\n\tif (this.image.blendingMode) {\r\n\t\tthis.context.globalCompositeOperation = this.image.blendingMode;\r\n\t}\r\n\r\n\tif (this.imageNode) {\r\n\t\tsetImagePosition();\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.imageNode = new Image();\r\n\tthis.imageNode.onerror = function() {\r\n\t\tthrow new Error('Granim: The image source is invalid.');\r\n\t};\r\n\tthis.imageNode.onload = function() {\r\n\t\t_this.imgOriginalWidth = _this.imageNode.width;\r\n\t\t_this.imgOriginalHeight = _this.imageNode.height;\r\n\t\tsetImagePosition();\r\n\t\t_this.refreshColorsAndPos();\r\n\t\tif (!_this.isPausedWhenNotInView || _this.isCanvasInWindowView) {\r\n\t\t\t_this.animation = requestAnimationFrame(_this.animateColors.bind(_this));\r\n\t\t}\r\n\t\t_this.isImgLoaded = true;\r\n\t};\r\n\tthis.imageNode.src = this.image.source;\r\n\r\n\tfunction setImagePosition() {\r\n\t\tvar i, currentAxis;\r\n\r\n\t\tfor (i = 0; i < 2; i++) {\r\n\t\t\tcurrentAxis = !i ? 'x' : 'y';\r\n\t\t\tsetImageAxisPosition(currentAxis);\r\n\t\t}\r\n\r\n\t\tfunction setImageAxisPosition(axis) {\r\n\t\t\tvar canvasWidthOrHeight = _this[axis + '1'];\r\n\t\t\tvar imgOriginalWidthOrHeight = _this[axis === 'x' ? 'imgOriginalWidth' : 'imgOriginalHeight'];\r\n\t\t\tvar imageAlignIndex = axis === 'x' ? _this.image.position[0] : _this.image.position[1];\r\n\t\t\tvar imageAxisPosition;\r\n\t\t\tswitch(imageAlignIndex) {\r\n\t\t\t\tcase 'center':\r\n\t\t\t\t\timageAxisPosition = imgOriginalWidthOrHeight > canvasWidthOrHeight\r\n\t\t\t\t\t\t? -(imgOriginalWidthOrHeight - canvasWidthOrHeight) / 2\r\n\t\t\t\t\t\t: (canvasWidthOrHeight - imgOriginalWidthOrHeight) / 2;\r\n\t\t\t\t\t_this.imagePosition[axis] = imageAxisPosition;\r\n\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'top':\r\n\t\t\t\t\t_this.imagePosition['y'] = 0;\r\n\t\t\t\t\t_this.imagePosition['height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bottom':\r\n\t\t\t\t\t_this.imagePosition['y'] = canvasWidthOrHeight - imgOriginalWidthOrHeight;\r\n\t\t\t\t\t_this.imagePosition['height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'right':\r\n\t\t\t\t\t_this.imagePosition['x'] = canvasWidthOrHeight - imgOriginalWidthOrHeight;\r\n\t\t\t\t\t_this.imagePosition['width'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'left':\r\n\t\t\t\t\t_this.imagePosition['x'] = 0;\r\n\t\t\t\t\t_this.imagePosition['width'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (_this.image.stretchMode) {\r\n\t\t\t\timageAlignIndex = axis === 'x' ? _this.image.stretchMode[0] : _this.image.stretchMode[1];\r\n\t\t\t\tswitch(imageAlignIndex) {\r\n\t\t\t\t\tcase 'none':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'stretch':\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'stretch-if-bigger':\r\n\t\t\t\t\t\tif (imgOriginalWidthOrHeight < canvasWidthOrHeight) break;\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'stretch-if-smaller':\r\n\t\t\t\t\t\tif (imgOriginalWidthOrHeight > canvasWidthOrHeight) break;\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(progressPercent) {\r\n\tvar _this = this, activeChannel, activeChannelPos, i, j;\r\n\r\n\t// Loop through each colors of the active gradient\r\n\tfor (i = 0; i < this.activeColors.length; i++) {\r\n\r\n\t\t// Generate RGBA colors\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\t// If color value [0-255] round to the integer,\r\n\t\t\t// Else if opacity [0-1] round to 2 decimals\r\n\t\t\tactiveChannel = _this.activeColors[i][j] +\r\n\t\t\t\t(j !== 3\r\n\t\t\t\t\t? Math.ceil(_this.activeColorsDiff[i][j] / 100 * progressPercent)\r\n\t\t\t\t\t: Math.round((_this.activeColorsDiff[i][j] / 100 * progressPercent) * 100) / 100\r\n\t\t\t\t);\r\n\r\n\t\t\t// Prevent colors values from going < 0 & > 255\r\n\t\t\tif (activeChannel <= 255 && activeChannel >= 0) {\r\n\t\t\t\t_this.currentColors[i][j] = activeChannel;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate gradient color position\r\n\t\tactiveChannelPos = parseFloat((_this.activeColorsPos[i] +\r\n\t\t\t(_this.activeColorsPosDiff[i] / 100 * progressPercent)\r\n\t\t).toFixed(4));\r\n\r\n\t\tif (activeChannelPos <= 1 && activeChannelPos >= 0) {\r\n\t\t\t_this.currentColorsPos[i] = activeChannelPos;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.makeGradient();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this, colorDiff, colorPosDiff, nextColors, nextColorsPos;\r\n\r\n\tif (!this.channels[this.activeState]) this.channels[this.activeState] = [];\r\n\r\n\t// If the actual channel exist, reassign properties and exit\r\n\t// (each channel is saved to prevent recomputing it each time)\r\n\tif (this.channels[this.activeState][this.channelsIndex] !== undefined) {\r\n\t\tthis.activeColors = this.channels[this.activeState][this.channelsIndex].colors;\r\n\t\tthis.activeColorsDiff = this.channels[this.activeState][this.channelsIndex].colorsDiff;\r\n\t\tthis.activeColorsPos = this.channels[this.activeState][this.channelsIndex].colorsPos;\r\n\t\tthis.activeColorsPosDiff = this.channels[this.activeState][this.channelsIndex].colorsPosDiff;\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Set blank properties\r\n\tthis.channels[this.activeState].push([{}]);\r\n\tthis.channels[this.activeState][this.channelsIndex].colors = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsDiff = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsPos = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsPosDiff = [];\r\n\tthis.activeColors = [];\r\n\tthis.activeColorsDiff = [];\r\n\tthis.activeColorsPos = [];\r\n\tthis.activeColorsPosDiff = [];\r\n\r\n\t// Go on each gradient of the current state\r\n\tthis.states[this.activeState].gradients[this.channelsIndex].forEach(function(color, i) {\r\n\t\t// Push the hex color converted to rgba on the channel and the active color properties\r\n\t\tvar colorPos = _this.getColorPos(color, i);\r\n\t\tvar color = _this.getColor(color);\r\n\t\tvar rgbaColor = _this.convertColorToRgba(color);\r\n\t\tvar activeChannel = _this.channels[_this.activeState];\r\n\r\n\t\tactiveChannel[_this.channelsIndex].colors.push(rgbaColor);\r\n\t\t_this.activeColors.push(rgbaColor);\r\n\t\tactiveChannel[_this.channelsIndex].colorsPos.push(colorPos);\r\n\t\t_this.activeColorsPos.push(colorPos);\r\n\r\n\t\t// If it's the first channel to be set, set the currentColors\r\n\t\tif (!_this.isCurrentColorsSet) {\r\n\t\t\t_this.currentColors.push(_this.convertColorToRgba(color));\r\n\t\t\t_this.currentColorsPos.push(colorPos);\r\n\t\t}\r\n\r\n\t\t// If it's the last gradient, compute the color diff between the last gradient and the first one,\r\n\t\t// else between the penultimate one and the last one\r\n\t\tif (_this.channelsIndex === _this.states[_this.activeState].gradients.length - 1) {\r\n\t\t\tcolorDiff = _this.getColorDiff(\r\n\t\t\t\tactiveChannel[_this.channelsIndex].colors[i],\r\n\t\t\t\tactiveChannel[0].colors[i]\r\n\t\t\t);\r\n\t\t\tcolorPosDiff = _this.getColorPosDiff(\r\n\t\t\t\tactiveChannel[_this.channelsIndex].colorsPos[i],\r\n\t\t\t\tactiveChannel[0].colorsPos[i]\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\t\t\tnextColors = _this.convertColorToRgba(_this.getColor(_this.states[_this.activeState].gradients[_this.channelsIndex + 1][i]));\r\n\t\t\tnextColorsPos = _this.getColorPos(_this.states[_this.activeState].gradients[_this.channelsIndex + 1][i], i);\r\n\t\t\tcolorDiff = _this.getColorDiff(activeChannel[_this.channelsIndex].colors[i], nextColors);\r\n\t\t\tcolorPosDiff = _this.getColorPosDiff(activeChannel[_this.channelsIndex].colorsPos[i], nextColorsPos);\r\n\t\t}\r\n\r\n\t\tactiveChannel[_this.channelsIndex].colorsDiff.push(colorDiff);\r\n\t\t_this.activeColorsDiff.push(colorDiff);\r\n\t\tactiveChannel[_this.channelsIndex].colorsPosDiff.push(colorPosDiff);\r\n\t\t_this.activeColorsPosDiff.push(colorPosDiff);\r\n\t});\r\n\r\n\tthis.activetransitionSpeed = this.states[this.activeState].transitionSpeed || 5000;\r\n\tthis.isCurrentColorsSet = true;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar ctx = this.context;\r\n\r\n\tswitch(this.direction) {\r\n\t\tcase 'diagonal':\r\n\t\t\treturn ctx.createLinearGradient(0, 0, this.x1, this.y1);\r\n\r\n\t\tcase 'left-right':\r\n\t\t\treturn ctx.createLinearGradient(0, 0, this.x1, 0);\r\n\r\n\t\tcase 'top-bottom':\r\n\t\t\treturn ctx.createLinearGradient(this.x1 / 2, 0, this.x1 / 2, this.y1);\r\n\r\n\t\tcase 'radial':\r\n\t\t\treturn ctx.createRadialGradient(this.x1 / 2, this.y1 / 2, this.x1 / 2, this.x1 / 2, this.y1 / 2, 0);\r\n\r\n\t\tcase 'custom':\r\n\t\t\treturn ctx.createLinearGradient(\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.x0, this.x1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.y0, this.y1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.x1, this.x1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.y1, this.y1)\r\n\t\t\t);\r\n\t}\r\n};\r\n\r\nfunction getCustomCoordinateInPixels(coordinate, size) {\r\n\treturn coordinate.indexOf('%') > -1\r\n\t\t? size / 100 * parseInt(coordinate.split('%')[0], 10)\r\n\t\t: parseInt(coordinate.split('px')[0], 10);\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.getDimensions();\r\n\tthis.canvas.setAttribute('width', this.x1);\r\n\tthis.canvas.setAttribute('height', this.y1);\r\n\tif (this.image) this.prepareImage();\r\n\tthis.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(element) {\r\n\tvar siteURL = 'https://sarcadass.github.io/granim.js/api.html';\r\n\tthrow new Error('Granim: Input error on \"' + element + '\" option.\\nCheck the API ' + siteURL + '.');\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(inputType) {\r\n\tvar xPositionValues = ['left', 'center', 'right'];\r\n\tvar yPositionValues = ['top', 'center', 'bottom'];\r\n\tvar stretchModeValues = ['none', 'stretch', 'stretch-if-smaller', 'stretch-if-bigger'];\r\n\tvar blendingModeValues = ['multiply', 'screen', 'normal', 'overlay', 'darken',\r\n\t\t'lighten', 'lighter', 'color-dodge', 'color-burn', 'hard-light', 'soft-light',\r\n\t\t'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\r\n\tvar directionValues = ['diagonal', 'left-right', 'top-bottom', 'radial', 'custom'];\r\n\r\n\tswitch(inputType) {\r\n\t\tcase 'image':\r\n\t\t\t// Validate image.position\r\n\t\t\tif ((!Array.isArray(this.image.position) || this.image.position.length !== 2) ||\r\n\t\t\t\txPositionValues.indexOf(this.image.position[0]) === -1 ||\r\n\t\t\t\tyPositionValues.indexOf(this.image.position[1]) === -1\r\n\t\t\t) { this.triggerError('image.position'); }\r\n\t\t\t// Validate image.stretchMode\r\n\t\t\tif (this.image.stretchMode) {\r\n\t\t\t\tif ((!Array.isArray(this.image.stretchMode) || this.image.stretchMode.length !== 2) ||\r\n\t\t\t\t\tstretchModeValues.indexOf(this.image.stretchMode[0]) === -1 ||\r\n\t\t\t\t\tstretchModeValues.indexOf(this.image.stretchMode[1]) === -1\r\n\t\t\t\t) { this.triggerError('image.stretchMode'); }\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'blendingMode':\r\n\t\t\tif (blendingModeValues.indexOf(this.image.blendingMode) === -1) {\r\n\t\t\t\tthis.clear();\r\n\t\t\t\tthis.triggerError('blendingMode');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'direction':\r\n\t\t\tif (directionValues.indexOf(this.direction) === -1) {\r\n\t\t\t\tthis.triggerError('direction');\r\n\t\t\t} else {\r\n\t\t\t\tif (this.direction === 'custom') {\r\n\t\t\t\t\tif (!areDefinedInPixelsOrPercentage([\r\n\t\t\t\t\t\tthis.customDirection.x0,\r\n\t\t\t\t\t\tthis.customDirection.x1,\r\n\t\t\t\t\t\tthis.customDirection.y0,\r\n\t\t\t\t\t\tthis.customDirection.y1\r\n\t\t\t\t\t])) {\r\n\t\t\t\t\t\tthis.triggerError('customDirection');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nfunction areDefinedInPixelsOrPercentage(array) {\r\n\tvar definedInPixelsOrPercentage = true, i = 0, value;\r\n\twhile (definedInPixelsOrPercentage && i < array.length) {\r\n\t\tvalue = array[i];\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\tdefinedInPixelsOrPercentage = false;\r\n\t\t} else {\r\n\t\t\tvar splittedValue = null;\r\n\t\t\tvar unit = null;\r\n\t\t\tif (value.indexOf('px') !== -1) unit = 'px';\r\n\t\t\tif (value.indexOf('%') !== -1) unit = '%';\r\n\t\t\tsplittedValue = value.split(unit).filter(function(value) {\r\n\t\t\t\treturn value.length > 0;\r\n\t\t\t});\r\n\t\t\t// Check if there is a unit ('px' or '%'),\r\n\t\t\t// a char before the unit,\r\n\t\t\t// no char after the unit,\r\n\t\t\t// the string without the unit is only composed of digits\r\n\t\t\tif (\r\n\t\t\t\t!unit\r\n\t\t\t\t|| splittedValue.length > 2\r\n\t\t\t\t|| !splittedValue[0]\r\n\t\t\t\t|| splittedValue[1]\r\n\t\t\t\t|| !/^-?\\d+\\.?\\d*$/.test(splittedValue[0])\r\n\t\t\t) {\r\n\t\t\t\tdefinedInPixelsOrPercentage = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\treturn definedInPixelsOrPercentage;\r\n}\r\n","'use strict';\r\n\r\nfunction Granim(options) {\r\n\tthis.getElement(options.element);\r\n\tthis.x1 = 0;\r\n\tthis.y1 = 0;\r\n\tthis.name = options.name || false;\r\n\tthis.elToSetClassOn = options.elToSetClassOn || 'body';\r\n\tthis.direction = options.direction || 'diagonal';\r\n\tthis.customDirection = options.customDirection || {};\r\n\tthis.validateInput('direction');\r\n\tthis.isPausedWhenNotInView = options.isPausedWhenNotInView || false;\r\n\tthis.states = options.states;\r\n\tthis.stateTransitionSpeed = options.stateTransitionSpeed || 1000;\r\n\tthis.previousTimeStamp = null;\r\n\tthis.progress = 0;\r\n\tthis.isPaused = false;\r\n\tthis.isCleared = false;\r\n\tthis.isPausedBecauseNotInView = false;\r\n\tthis.context = this.canvas.getContext('2d');\r\n\tthis.channels = {};\r\n\tthis.channelsIndex = 0;\r\n\tthis.activeState = options.defaultStateName || 'default-state';\r\n\tthis.isChangingState = false;\r\n\tthis.currentColors = [];\r\n\tthis.currentColorsPos = [];\r\n\tthis.activetransitionSpeed = null;\r\n\tthis.eventPolyfill();\r\n\tthis.scrollDebounceThreshold = options.scrollDebounceThreshold || 300;\r\n\tthis.scrollDebounceTimeout = null;\r\n\tthis.isImgLoaded = false;\r\n\tthis.isCanvasInWindowView = false;\r\n\tthis.firstScrollInit = true;\r\n\tthis.animating = false;\r\n\tthis.gradientLength = this.states[this.activeState].gradients[0].length;\r\n\tif (options.image && options.image.source) {\r\n\t\tthis.image = {\r\n\t\t\tsource: options.image.source,\r\n\t\t\tposition: options.image.position || ['center', 'center'],\r\n\t\t\tstretchMode: options.image.stretchMode || false,\r\n\t\t\tblendingMode: options.image.blendingMode || false\r\n\t\t};\r\n\t}\r\n\tthis.events = {\r\n\t\tstart: new CustomEvent('granim:start'),\r\n\t\tend: new CustomEvent('granim:end'),\r\n\t\tgradientChange: function(details) {\r\n\t\t\treturn new CustomEvent('granim:gradientChange', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tisLooping: details.isLooping,\r\n\t\t\t\t\tcolorsFrom: details.colorsFrom,\r\n\t\t\t\t\tcolorsTo: details.colorsTo,\r\n\t\t\t\t\tactiveState: details.activeState\r\n\t\t\t\t},\r\n\t\t\t\tbubbles: false,\r\n\t\t\t\tcancelable: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tthis.callbacks = {\r\n\t\tonStart: typeof options.onStart === 'function' ? options.onStart : false,\r\n\t\tonGradientChange: typeof options.onGradientChange === 'function' ?\r\n\t\t\toptions.onGradientChange :\r\n\t\t\tfalse,\r\n\t\tonEnd: typeof options.onEnd === 'function' ? options.onEnd : false\r\n\t};\r\n\tthis.getDimensions();\r\n\tthis.canvas.setAttribute('width', this.x1);\r\n\tthis.canvas.setAttribute('height', this.y1);\r\n\tthis.setColors();\r\n\r\n\tif (this.image) {\r\n\t\tthis.validateInput('image');\r\n\t\tthis.prepareImage();\r\n\t}\r\n\r\n\tthis.pauseWhenNotInViewNameSpace = this.pauseWhenNotInView.bind(this);\r\n\tthis.setSizeAttributesNameSpace = this.setSizeAttributes.bind(this);\r\n\tthis.onResize();\r\n\r\n\tif (this.isPausedWhenNotInView) {\r\n\t\tthis.onScroll();\r\n\t\t\r\n\t} else {\r\n\t\tif (!this.image) {\r\n\t\t\tthis.refreshColorsAndPos();\r\n\t\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\t\tthis.animating = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// Callback and Event\r\n\tif (this.callbacks.onStart) this.callbacks.onStart();\r\n\tthis.canvas.dispatchEvent(this.events.start);\r\n}\r\n\r\nGranim.prototype.animateColors = require('./animateColors.js');\r\nGranim.prototype.changeBlendingMode = require('./changeBlendingMode.js');\r\nGranim.prototype.changeDirection = require('./changeDirection.js');\r\nGranim.prototype.changeState = require('./changeState.js');\r\nGranim.prototype.clear = require('./clear.js');\r\nGranim.prototype.convertColorToRgba = require('./convertColorToRgba.js');\r\nGranim.prototype.destroy = require('./destroy.js');\r\nGranim.prototype.eventPolyfill = require('./eventPolyfill.js');\r\nGranim.prototype.getColor = require('./getColor.js');\r\nGranim.prototype.getColorDiff = require('./getColorDiff.js');\r\nGranim.prototype.getColorPos = require('./getColorPos.js');\r\nGranim.prototype.getColorPosDiff = require('./getColorPosDiff.js');\r\nGranim.prototype.getCurrentColors = require('./getCurrentColors.js');\r\nGranim.prototype.getCurrentColorsPos = require('./getCurrentColorsPos.js');\r\nGranim.prototype.getDimensions = require('./getDimensions.js');\r\nGranim.prototype.getElement = require('./getElement.js');\r\nGranim.prototype.getLightness = require('./getLightness.js');\r\nGranim.prototype.makeGradient = require('./makeGradient.js');\r\nGranim.prototype.onResize = require('./onResize.js');\r\nGranim.prototype.onScroll = require('./onScroll.js');\r\nGranim.prototype.pause = require('./pause.js');\r\nGranim.prototype.pauseWhenNotInView = require('./pauseWhenNotInView.js');\r\nGranim.prototype.play = require('./play.js');\r\nGranim.prototype.prepareImage = require('./prepareImage.js');\r\nGranim.prototype.refreshColorsAndPos = require('./refreshColorsAndPos.js');\r\nGranim.prototype.setColors = require('./setColors.js');\r\nGranim.prototype.setDirection = require('./setDirection.js');\r\nGranim.prototype.setSizeAttributes = require('./setSizeAttributes.js');\r\nGranim.prototype.triggerError = require('./triggerError.js');\r\nGranim.prototype.validateInput = require('./validateInput.js');\r\n\r\nmodule.exports = Granim;\r\n","module.exports = require('./lib/Granim.js');\r\n","import { initMorphingPointer } from 'morphing-pointer';\ninitMorphingPointer();\nimport Granim from 'granim';\n//\n\nvar granimInstance = new Granim({\n    element: '#canvas-basic',\n    direction: 'left-right',\n    isPausedWhenNotInView: true,\n    stateTransitionSpeed: 300,\n    states: {\n        'default-state': {\n            gradients: [\n                ['rgb(53, 43, 70)', 'rgb(33, 31, 80)'],\n                ['#f9c9f9', '#0575E6'],\n                ['#0575E6', '#f9c9f9'],\n                ['rgb(33, 31, 80)', 'rgb(53, 43, 70)'],\n            ],\n        },\n    },\n});"]}